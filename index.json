[{"content":"Chapter 4 This could be yours Start your success story. Now!\n","description":"","tags":null,"title":"This could be yours","uri":"/yours/"},{"content":"Chapter 5 Tests Some pages for internal testing of differnt styles\nCode Some testing for different styles used in syntax highlightning and preformatted blocks\nImages Some testing for different styles of image links\nLinks Some testing for different styles of links\n","description":"","tags":null,"title":"Tests","uri":"/tests/"},{"content":"Toetsen en inlevermomenten (21/22) Datum Code Stof Toetsweek 1 4H-IN-T01 html en ccs zondag datum 4H-IN-PO1 Toetsweek 2 4H-IN-T02 informatie zondag datum 4H-IN-PO2 Toetsweek 3 4H-IN-T03 programmeren Het laatste moment om vragen te stellen over PO’s is de laatste les voor de inleverdatum.\nLesplanner (21/22) PTA (21/22)","description":"","tags":null,"title":"4 havo","uri":"/planning/4h/"},{"content":"PTA (21/22) Lesplanner (21/22)","description":"","tags":null,"title":"5 havo","uri":"/planning/5h/"},{"content":"PTA (21/22) Lesplanner (21/22)","description":"","tags":null,"title":"4 vwo","uri":"/planning/4v/"},{"content":"","description":"","tags":null,"title":"1","uri":"/yours/1/"},{"content":"Hier vind je de PTA’s en lesplanners per jaarlaag. En hier staat ook de stof per toets (welke modules, de leerdoelen zitten in de modules)\n4 havo 5 havo 4 vwo ","description":"","tags":null,"title":"1. Planning","uri":"/planning/"},{"content":"","description":"","tags":null,"title":"10","uri":"/yours/10/"},{"content":"","description":"","tags":null,"title":"2","uri":"/yours/2/"},{"content":"Hier vind je alle theorie per onderwerp.\n- Hoe gaan we om met paragrafen die mogen worden overgeslagen? =\u003e dieplinks gebruiken - Waar laten we de sheets? =\u003e link onder desbetreffend kopje? =\u003e besproken: hier toevoegen bijv. met aanvullende documenten - Waar laten we uitleg video;s? =\u003e link onder desbetreffend kopje? =\u003e besproken: hier toevoegen op subpagina - Per module gaan we subpagina's maken - de leerdoelen nemen we op in theorie, per module Informatie Informatica Actief, module informatie digitaal\nHTML en CSS Khanacademy, module Intro to HTML/CSS\nProgrammeren in Javascript Khanacademy, module Intro to JS\nDatabases Khanacademy, module Intro to SWL\nPhysical Computing met Arduino Arduino-lessen.nl, les 1 t/m 5\nNetwerken Informatica Actief, keuzemodule netwerken\n… Losse theorie onderwerpen: Intellectueel eigendom Inleiding Tijdens het maken van je website zul je ongetwijfeld gemerkt hebben hoe gemakkelijk het is om informatie van andere webpagina’s over te nemen in die van jezelf. Het was vooraf bekend dat je voor de opdracht geen tekst mocht kopiëren zonder te citeren, maar wellicht heb je wel gebruik gemaakt van afbeeldingen, muziek, of HTML / javascript code. Maar mag dit eigenlijk wel? Dat hangt er vanaf. Hieronder zullen we een aantal aspecten van intellectueel eigendom behandelen die je zullen helpen met het beantwoorden van de vraag of je de informatie op je website rechtmatig hebt gebruikt.\n","description":"","tags":null,"title":"2. Theorie","uri":"/theorie/"},{"content":"","description":"","tags":null,"title":"3","uri":"/yours/3/"},{"content":"Hier vind je de praktische opdrachten. Praktische opdrachten zijn meestal tussen de vier en 8 weken werk. Je hebt veel vrijheid en kunt er echt iets moois van maken.\n3.2 Game Opdrachtbeschrijving De opdracht in het kort is: Maak in groepjes van twee je eigen spel in JavaScript. Je gebruikt de startcode en maakt gebruik van de p5js-library.\n","description":"","tags":null,"title":"3. Opdrachten","uri":"/opdrachten/"},{"content":"Opdrachtbeschrijving De opdracht in het kort is: Maak in groepjes van twee je eigen spel in JavaScript. Je gebruikt de startcode en maakt gebruik van de p5js-library.\nGame kiezen Je bent vrij om zelf te kiezen welke game je gaat maken. Je docent moet de game die je kiest goedkeuren. Enkele voorbeelden van een game die je kunt maken zijn: Tennis, Flappy Bird, Snake (voorganger van Slither.io), een Break Out Game (zoals Arkanoid), een race spelletje, een eenvoudige platform game (zoals pacman), een puzzelspel enzovoort.\nWerkwijze Je maakt deze opdracht in een team van twee personen. De docent geeft aan hoe de teams gemaakt worden. Je bepaalt zelf hoe je het werk binnen je team verdeelt, zolang iedereen een gelijkwaardige bijdrage levert. Je krijgt één cijfer per team, maar de docent kan hiervan afwijken als de kwaliteit van het geleverde werk tussen de teamleden verschilt. Je krijgt van de docent startcode voor deze opdracht. Deze staat klaar in een repo op GitHub. Er is één repo per team. Je maakt code in Replit (havo) of Gitpod (vwo). Elk teamlid heeft zijn eigen Replit of Gitpod omgeving. Elke week (liefst elke les) slaan alle teamleden hun tussentijdse werk op in de repo op GitHub. Zo zorgen jullie ervoor dat de laatste werkende versie van jullie game steeds op GitHub staat. Deze opdracht maak je alsof het een echt project is. Je maakt eerst een planning. Daarna kijk je wekelijks of je nog volgens plan loopt. Als je niet volgens plan loopt, dan stuur je bij. In de les word je hiermee geholpen, maar uiteindelijk moet jij zorgen dat je op tijd klaar bent en een goed resultaat oplevert. Beoordeling Het cijfer dat je voor je PO krijgt wordt vanuit vier invalshoeken bepaald:\nbasiswerking uiterlijk techniek inzet, planning en samenwerking Minimale eisen\nVoordat je een cijfer krijgt voor je PO, wordt gekeken of je werk voldoet aan de minimale eisen. Werk dat niet voldoet aan de minimale eisen krijgt het cijfer 1,0. De minimale eisen zijn:\nHet spel is moreel verantwoord: het is niet beledigend, visueel gewelddadig of op andere manieren onfatsoenlijk. Je mag voorbeelden van kleine stukjes code van internet hergebruiken, zolang je het begrijpt en je de stijl zo aangepast hebt dat het past bij de rest van je code. De commentaren, variabelen en functies in je code zijn Nederlands. Een download in zip-formaat van je game mag maximaal 20 MB groot zijn. Basiswerking\nSpel start op Het spel werkt (hoe klein ook) Behaalde punten zijn zichtbaar bij game-over Het doel en de bediening van het spel is duidelijk Uiterlijk\nAantrekkelijk uiterlijk Prettige bediening Eenvoudig om mee te beginnen en moeilijker als je verder komt Afwisseling Techniek\nDe code volgt de lijn van het template De code is netjes en duidelijk leesbaar De code bevat geen dubbele stukken code Je hebt de technieken gebruikt die in de programmeerlessen zijn aangeboden. Je hebt dingen toegevoegd waarvan je zelf hebt uitgezocht hoe ze werken Inzet, planning en samenwerking\nJe toont inzet tijdens de lessen De planning is vooraf gemaakt, gevolgd en als nodig bijgesteld. De taakverdeling is duidelijk en alle teamleden dragen in gelijke mate bij. Het werk is verdeeld over de weken waarin aan de opdracht kon worden gewerkt. Inleveren De deadline voor inleveren vind je in de lesplanner. Je kunt vragen stellen tot de laatste les voor de deadline. Je zorgt dat alle bestanden in die nodig zijn om je spel te spelen in GitHub staan, dit zijn ten minste: index.html, style.css en script.js. Als je plaatjes gebruikt, dan staan die er ook bij. Je zorgt dat het README.md bestand met je planning aanwezig is. Je hebt aangegeven welke onderdelen gereed zijn. Uit de versie historie in GitHub blijkt hoe je je planning tussentijds hebt gevolgd en bijgesteld. De laatste versie van je PO die op het moment van de deadline in GitHub staat, wordt gebruikt voor de beoordeling. Startcode Uitlegvideo’s - algemene gitpod en rpelit link - stappenplan en uitleg van de repo en gebruikte technieken zet je in de readme - rijkere uitleg zoals video's of code voorbeelden zetten we op de website - zet in de description van de repo een link naar informatica.emmauscollege.nl - hoe verspreiden we de link naar het google-docs document waarin leerlingen zich opgeven voor de groepjes en hun github account opgeven? =\u003e op de pagina van de opdracht en dan bovenaan bij de opdracht een kopje \"inschrijven voor deze opdracht\" toevoegen. Documentatie p5js reference https://p5js.org/reference/ ","description":"","tags":null,"title":"3.2 Game","uri":"/opdrachten/game/"},{"content":"","description":"","tags":null,"title":"4","uri":"/yours/4/"},{"content":" - handleiding in text met 1 subpagina per tool - eventueel bovenaan pagina van een tool een embed naar een videolist met uitleg toevoegen (geen uitleg met plaatjes, maar video) Tools zijn programma’s die we gebruiken om dingen te maken. Tools zijn dus het gereedschap dat je gebruikt bij informatica.\nDe tools die we bij informatica gebruiken:\nArduino IDE Wat is de Arduino IDE? De Arduino IDE is een programma waarmee je je Arduino kunt programmeren. De Arduino IDE is beschikbaar voor computers met Windows, Linux en MacOS. Het programma is niet beschikbaar voor iPads en Chromebooks. Functies van de Arduino IDE: code-editor compileren gecompileerde code uploaden naar een Arduino microcontroller (via een USB-kabel) Installeren van het programma De Arduino IDE is gratis. Je hoeft geen account aan te maken.\nFilius Wat is Filius? Filius is een programma waarmee je netwerken kunt bouwen en simuleren. Installeren van het programma Filius is gratis en je hoeft geen account aan te maken. Je kunt Filius op twee manieren starten. Start Filius in je browser en volg de stappen uit de Readme.md. Dit werkt op (bijna) elk apparaat met een moderne webbrowser. Je hebt een (gratis) account in GitPod nodig. Je browser opent GitPod en op de servers van GitPod wordt een Linux-omgeving met Filius geopend.\nGitHub TL;DR Git en GitHub zijn superhandig bij het programmeren, zowel alleen als in een team. Ga naar het stappenplan hieronder om te zien hoe je dit bij het programmeren gebruikt. Wat is GitHub? GitHub is een website waarop je gemakkelijk je programmeercode kunt opslaan. Je moet het zien als een soort cloudopslag voor je code. Heb je eenmaal een account in GitHub aangemaakt, dan kun je repositories maken. Een repository bevat de code voor één project of opdracht.\n","description":"","tags":null,"title":"4. Tools","uri":"/tools/"},{"content":"","description":"","tags":null,"title":"5","uri":"/yours/5/"},{"content":"","description":"","tags":null,"title":"6","uri":"/yours/6/"},{"content":"","description":"","tags":null,"title":"7","uri":"/yours/7/"},{"content":"","description":"","tags":null,"title":"8","uri":"/yours/8/"},{"content":"","description":"","tags":null,"title":"9","uri":"/yours/9/"},{"content":"Wat is de Arduino IDE? De Arduino IDE is een programma waarmee je je Arduino kunt programmeren. De Arduino IDE is beschikbaar voor computers met Windows, Linux en MacOS. Het programma is niet beschikbaar voor iPads en Chromebooks. Functies van de Arduino IDE:\ncode-editor compileren gecompileerde code uploaden naar een Arduino microcontroller (via een USB-kabel) Installeren van het programma De Arduino IDE is gratis. Je hoeft geen account aan te maken. Download de Arduino IDE van https://www.arduino.cc/en/software Installeer het programma zoals je gewend bent om andere programma’s te installeren op je computer. Je eerste Arduino schets Start de Arduino IDE Sluit de Arduino met een USB-kabel aan op de laptop Stel de juiste Arduino in. Klik in het menu op “Hulpmiddelen”-\u003e“Board”-\u003ede_Arduino_die_je_hebt. De rode Arduino’s op school zijn “Aduino Nano”. Stel de USB-poort in waarop je de Arduino hebt aangesloten. Klik in het menu op “Hulpmiddelen”-\u003e“Poort”-\u003ekies_de_juiste_poort. Meestal is de juiste poort iets met “arduino” of “mega” en iets zonder “bluetooth”. Maak een schets. Een programma voor je Arduino microcontroller wordt vaak een schets (Engels: sketch) genoemd. Je kunt beginnen met een voorbeeld-schets. Klik in het menu op “Bestand”-\u003e“Voorbeelden”-\u003e“Basics”-\u003e“Blink” Compileer de schets (vertaal je code naar machinetaal die de Arduino gebruikt). Klik in het menu op “Schets”-\u003e“Verifeer/Compileer”. Upload (verstuur naar je Arduino via de USB-kabel). Klik in het menu op “Schets”-\u003e“Upload”. Je ziet nu een klein ledje op je Arduino die knippert. Verander de code, bijvoorbeeld delay(1000) aanpassen in delay(200). Herhaal stap 7. Je zult zien dat de Arduino stap 6 (compileren) vanzelf opnieuw doet, omdat je de code hebt aangepast. Het ledje knippert nu sneller. Nu je stap 9 gedaan hebt, weet je zeker dat het jouw programma is dat in de Arduino zit. De Arduino onthoudt namelijk het laatste programma, ook als de stroom eraf is geweest, dus het kan zijn dat het knipperend-led programma er al door een vorige leerling in is gezet. Extra libraries installeren De ingewikkeldere sensoren en actuatoren die je kunt aansluiten op je Arduino, zoals displays, hebben libraries nodig om ze te kunnen programmeren. Het installeren van libraries in de Arduino kan via het menu “Hulpmiddelen” -\u003e “Bibliotheken beheren”. Het vinden van de juiste bibliotheek kan wel eens lastig zijn, vraag het de docent als je twijfelt. Goede biblitheken bevatten voorbeeld-code die na installatie van de bibliotheek in de Arduino IDE terug te vinden is in het menu onder “Bestand” -\u003e “Voorbeelden” Meer informatie Meer informatie over de Arduino-taal vind je op https://www.arduino.cc/ klik op “documentation” -\u003e “reference” Meer informatie over de pinnen van je Arduino vind je op https://www.arduino.cc/ klik op “hardware” -\u003e kies jouw Arduino -\u003e kies het tabblad “FAQ” How-to Schets opslaan Kies in het menu “Bestand” -\u003e “Opslaan als”, kies een map en geef je schets een naam. Een schets wordt altijd opgeslagen in een map met dezelfde naam als de schets. Q\u0026A Bij het uploaden krijg ik de melding “avrdude: ser_open(): can’t open device”… Je hebt waarschijnlijk vergeten de juiste USB-poort te kiezen. Kies de juiste USB-poort in het menu onder “Hulpmiddelen”-\u003e“Poort”\nIk krijg één of meerdere foutmelding(en) tijdens het compileren Je hebt fout gemaakt in de code. Bekijk de bovenste foutmelding. Kijk of je de melding begrijpt. Er staat bij op welke regel de fout gevonden is. Probeer de fout in je code op te lossen. Compileer de code daarna opnieuw.\nIk krijg een foutmelding met “undefined” Je hebt waarschijnlijk een variabele gebruikt zonder deze te declareren of een typefout gemaakt in de naam van de variabele.\n","description":"","tags":null,"title":"Arduino IDE","uri":"/tools/arduino-ide/"},{"content":"","description":"","tags":null,"title":"Categories","uri":"/categories/"},{"content":"Some testing for different styles used in syntax highlightning and preformatted blocks.\nInline Code This is some very long inline code. Where does it wrap?\nWhat about wrapping short inline code if multiple sections are written side by side?\nWhat about wrapping short inline code if multiple sections are written side/by/side?\nWhat about wrapping long inline code if multiple sections are written side567 by34567 side567?\nWhat about wrapping long inline code if multiple sections are written side567/by34567/side567?\nCan we just use a simple HTML element ?\nBlock Code Code fences without any selected language { \"well\": \"some JSON in codefences in here\" } { \"well\": \"some JSON in HTML elements here\" } Block Preformatted Some preformatted stuff with markdown indention Some preformatted stuff in HTML elements ","description":"Some testing for different styles used in syntax highlightning and preformatted blocks","tags":null,"title":"Code","uri":"/tests/code/"},{"content":"Contributors Special thanks to everyone who has contributed to this project.\nMany thanks to Mathieu Cornic for his work on porting the Learn theme to Hugo.\nMany thanks to Andy Miller for initially creating the Learn theme for Grav.\nPackages and libraries autoComplete - A lightweight and powerful vanilla JavaScript completion suggester clipboard.js - A modern approach to copy text to clipboard Featherlight - A lightweight jQuery lightbox plugin Font Awesome - The internet’s icon library and toolkit jQuery - The “Write less, do more” JavaScript library jquery-svg-zoom-pan - A jQuery plugin to enable pan and zoom in SVG images Lunr - Enables a great search experience without the need for external, server-side, search services Mermaid - Generation of diagram and flowchart from text in a similar manner as markdown Perfect Scrollbar - A minimalistic but perfect custom scrollbar plugin RapiDoc - Create beautiful, customizable, interactive API documentation from OpenAPI Specifications Tooling GitHub - Continuous deployement, testing and hosting of this project’s sources and its documentation gren - A releasenotes generator for GitHub Hugo - The static site generator of your choice ","description":"","tags":null,"title":"Credits","uri":"/more/credits/"},{"content":"Informatica Actuele berichten Inhoud 1. Planning Hier vind je de PTA’s en lesplanners per jaarlaag. En hier staat ook de stof per toets (welke modules, de leerdoelen zitten in de modules)\n2. Theorie Hier vind je alle theorie per onderwerp.\n3. Opdrachten Hier vind je de praktische opdrachten. Praktische opdrachten zijn meestal tussen de vier en 8 weken werk. Je hebt veel vrijheid en kunt er echt iets moois van maken.\n4. Tools - handleiding in text met 1 subpagina per tool - eventueel bovenaan pagina van een tool een embed naar een videolist met uitleg toevoegen (geen uitleg met plaatjes, maar video) Tools zijn programma’s die we gebruiken om dingen te maken. Tools zijn dus het gereedschap dat je gebruikt bij informatica.\nvoor docenten Hoe kunnen docenten hergebruiken en meedenken? Als we willen dat alle informatie voor onze leerlingen hier te vinden is, dan is het onontkoombaar dat er school-specifieke informatie tussen zit. We kunnen die zoveel mogelijk in aparte onderdelen zetten. Hergebruik betekent dan: site aan het begin van het jaar clonen en aanpassen aan je eigen behoefte. Volgend jaar kun je weer kopieren, maar dan moet je je aanpassingen opnieuw doen. Dit is niet helemaal wat we voor ogen hadden... Getting support To get support, feel free to open a new discussion topic or issue in the official repository on GitHub.\nBecome a contributor Feel free to update this documentation by just clicking the Edit link displayed on top right of each page. Your changes will be deployed automatically once they were reviewed.\nYou are most welcome to contribute bugfixes or even new features to the source code by making pull requests to the official repository via GitHub. Please visit the contribution guidelines first.\nLicense This site is licensed under the MIT License.\nCredits This theme would not be possible without the work of many others. See the credits for a detailed list.\npage views and unique visitors since July 13 2022\n","description":"","tags":null,"title":"Emmauscollege Rotterdam","uri":"/"},{"content":"Wat is Filius? Filius is een programma waarmee je netwerken kunt bouwen en simuleren.\nInstalleren van het programma Filius is gratis en je hoeft geen account aan te maken. Je kunt Filius op twee manieren starten.\nStart Filius in je browser en volg de stappen uit de Readme.md. Dit werkt op (bijna) elk apparaat met een moderne webbrowser. Je hebt een (gratis) account in GitPod nodig. Je browser opent GitPod en op de servers van GitPod wordt een Linux-omgeving met Filius geopend. Installeer Filius op je eigen apparaat. Filius is beschikbaar voor Windows, MacOS en Linux. Meer informatie Meer informatie over Filius kun je vinden op de website van de maker: https://www.lernsoftware-filius.de De help over het gebruik van Filius zit in het programma: druk op het vraagteken. ","description":"","tags":null,"title":"Filius","uri":"/tools/filius/"},{"content":"TL;DR Git en GitHub zijn superhandig bij het programmeren, zowel alleen als in een team. Ga naar het stappenplan hieronder om te zien hoe je dit bij het programmeren gebruikt.\nWat is GitHub? GitHub is een website waarop je gemakkelijk je programmeercode kunt opslaan. Je moet het zien als een soort cloudopslag voor je code. Heb je eenmaal een account in GitHub aangemaakt, dan kun je repositories maken. Een repository bevat de code voor één project of opdracht. De kern van een repository zijn de bestanden. GitHub biedt echter nog veel meer functies aan, zoals planborden (projects) en lijsten waarop je taken (issues) kunt bijhouden.\nGit GitHub is genoemd naar git. Git is zgn. versiecontrolesysteem, ontwikkeld door Linus Torvalds, de maker van het besturingssysteem Linux. Git is een prachtig hulpmiddel waarmee je:\ngemakkelijk terugkunt naar eerdere versies van je code. gemakkelijk tegelijk met anderen aan dezelfde code kunt werken zonder dat alles door de war gaat Tijdlijn Je kunt je git het gemakkelijkst voorstellen als een tijdlijn. De punten op de tijdlijn zijn alle versies die jij vanaf het begin hebt ‘opgeslagen’:\nHoe werkt dit? Tijdens het programmeren werk je vaak zo:\nMaak / verander je programmeercode. Sla je veranderingen op. Test uit of het werkt. Het maakt eigenlijk niet uit of je hierbij gebruik maakt van GitPod, Repl.it, Arduino of een andere programmeeromgeving.\nMet het gebruik van git komt daar nog een stap bij: de commit. Een commit doen betekent dat je een nieuw punt aan je tijdlijn toevoegt. Dit doe je als volgt:\nZet de bestanden klaar voor de commit Typ een korte maar begrijpelijke commitboodschap Commit Lokaal en cloud (=\u003eGitHub) Git heeft GitHub niet nodig om goed te kunnen werken. Toch heeft het veel voordelen om gebruik te maken van git in combinatie met GitHub, helemaal als je met anderen wilt samenwerken aan dezelfde code. GitHub functioneert dan als de centrale cloudopslag waar iedereen mee synchroniseert. Het is belangrijk om te beseffen dat je code in je programmeeromgeving en GitHub wel aan elkaar verbonden, maar niet automatisch gesynchroniseerd zijn. Je zult dit handmatig moeten doen. Maak je gebruik van GitHub, dan voer je na je commit een synchronisatie uit:\nDuw je commit van je ’lokale’ repository naar je repository op GitHub. Wanneer je samenwerkt met anderen, wil je als je later verdergaat eerst eventuele aanpassingen van je teamgenoten binnenhalen. Als zij die netjes hebben geduwd naar de repository op GitHub, kun jij die eenvoudig binnenhalen. Bij samenwerken in een team wordt stap 1 dus:\nHaal eventuele nieuwe commits van je GitHub repository binnen. 8 Stappen: Pull : Haal alle updates van GitHub binnen in je lokale repository. Codeer : Maak / verander je programmeercode. Save (all) : Sla je veranderingen op. Probeer : Test uit of het werkt. Stage : Zet de bestanden klaar voor de commit. Message : Typ een korte maar begrijpelijke commitboodschap. Commit : Maak een nieuw punt in je tijdlijn. Push : Duw je commit van je ’lokale’ repository naar je (cloud) repository op GitHub. Q\u0026A GitHub 404 fout Ik heb via email een link ontvangen om toegang te krijgen tot een repo, maar als ik op de link druk dan krijg ik een 404 fout. Wat moet ik doen?\nLogin op GitHub en druk daarna nogmaals op de link.\n","description":"","tags":null,"title":"GitHub","uri":"/tools/github/"},{"content":"Some testing for different styles of image links.\nMarkdown Relative to page Relative to page up level Static External fully qualified External without scheme External without scheme and scheme separator HTML Relative to page Relative to page up level Static External fully qualified External without scheme External without scheme and scheme separator ","description":"Some testing for different styles of image links","tags":null,"title":"Images","uri":"/tests/images/"},{"content":"Inleiding Tijdens het maken van je website zul je ongetwijfeld gemerkt hebben hoe gemakkelijk het is om informatie van andere webpagina’s over te nemen in die van jezelf. Het was vooraf bekend dat je voor de opdracht geen tekst mocht kopiëren zonder te citeren, maar wellicht heb je wel gebruik gemaakt van afbeeldingen, muziek, of HTML / javascript code.\nMaar mag dit eigenlijk wel? Dat hangt er vanaf. Hieronder zullen we een aantal aspecten van intellectueel eigendom behandelen die je zullen helpen met het beantwoorden van de vraag of je de informatie op je website rechtmatig hebt gebruikt. Daarnaast krijg je ook informatie over het gebruiken van afbeeldingen van mensen en (software)licenties.\nWat is intellectueel eigendom Intellectueel eigendom is eigenlijk iets vreemds. In de Nederlandse wet is eigendom beschermd. De spullen die jij in bezit hebt, mag een ander niet zomaar afnemen. Het is niet de bedoeling dat een medeleerling zomaar je mobiele telefoon uit je tas haalt omdat hij die wel kan gebruiken. Dan spreken we van diefstal. Maar hoe zit dit bij creatieve uitingen, of “voortbrengselen van de geest”? Mag iemand een leuk muzikaal thema uit een recent hiphop nummer gebruiken voor een eigen nummer? Mag iemand anders een werkstuk dat identiek is aan het jouwe uploaden op scholieren.com? De wetten voor de bescherming van intellectueel eigendom proberen ook dit te beschermen. Er zijn hiervoor talrijke nationale en internationale wetten.\nGeen auteursrecht voor dieren na uitspraak rechter VS in zaak selfie-aap “Dieren kunnen onder de Amerikaanse wet definitief geen aanspraak maken op het auteursrecht. Dat heeft een federale rechtbank van de Verenigde Staten bepaald in een uitspraak rond de ‘selfie-aap’.\nDe wilde kuifmakaak Naruto maakte in 2011 meerdere foto’s van zichzelf met een camera die was achtergelaten door fotograaf David Slater. Die beelden werden drie jaar later gepubliceerd in een boek, waarbij Slater zich het auteursrecht toe-eigende.\nDat leidde in 2015 tot een rechtszaak, die namens Naruto werd aangespannen door dierenrechtenorganisatie People for the Ethical Treatment of Animals (PETA). De organisatie beweerde dat de aap het auteursrecht op de selfies had. Een rechter ging daar echter niet in mee en stelde dat dieren geen auteursrecht kunnen bezitten. PETA ging vervolgens in beroep.”\nLees verder op nu.nl\nAuteursrecht In 1883 kwamen België, Duitsland, Frankrijk, Italië, Spanje, Tunesië, het Verenigd Koninkrijk en Zwitserland in Bern bij elkaar (Berner Conventie) om tot een eenduidig verdrag te komen om ook over grenzen heen het auteursrecht te beschermen. Tot dan toe waren er talloze verdragen tussen verschillende landen gesloten, maar dit werd onwerkbaar. Na verschillende conferenties kwam men in 1886 tot een verdrag dat op 5 december 1887 voor alle acht staten in werking zou treden. Deze landen vormden de Berner Unie. Een auteur uit de Berner Unie heeft in al deze landen automatisch het auteursrecht. Daar hoeven geen extra handelingen of claims voor worden gedaan. De verschillende landen zijn gebonden aan een minimum bescherming, maar mogen zelf hun wetgeving anders formuleren. Zo is in het verdrag opgenomen dat het auteursrecht pas na minimaal 50 jaare na de dood van de auteur (voor filmwerken na de publicatie) vervalt. In veel landen is dit echter langer. In Nederland wordt een periode van 70 jaar gehanteerd.\nOuders Nederlandse top-dj's willen dj-talenten beschermen “Managers die veel aan je verdienen en promotors die vooral zélf beter worden van succes van een ander: de dancewereld is een miljoenenbusiness en daar willen veel mensen een graantje van meepikken. Daar gaat het vaak mis, merken ouders van dj’s die op jonge leeftijd doorbraken.\nZij komen nu met de Dutch DJ Foundation (DDJF). Zo willen ze de belangen behartigen van Nederlandse dj’s en producers.”\nLees verder op nos.nl\nSteeds meer landen werden lid van deze Unie, waaronder Nederland in 1912. Opvallend is dat bijvoorbeeld de Verenigde Staten pas in 1989 lid werden. Dat verklaart ook (deels) waarom in de V.S. vaak zulke uitvoerige copyright claims in publicaties staan.\nHet auteursrecht is in Nederland zo geformuleerd:\n“Het auteursrecht is het uitsluitend recht van den maker van een werk van letterkunde, wetenschap of kunst, of van diens rechtverkrijgenden, om dit openbaar te maken en te verveelvoudigen, behoudens de beperkingen, bij de wet gesteld.”\nEr zijn echter situaties waarin anderen wel of gedeeltelijk zo’n werk mogen verveelvoudigen of publiceren. Zo mag berichtgeving van nieuws en actualiteiten door andere nieuwsmedia vrij worden gebruikt, mits men de bron vermeldt. Een ander geval is het citeren. Voor een citaat geldt dat het een ondergeschikte rol vervult in het werk waarin het geciteerd wordt en dat de bron vermeld moet worden. Interessant is de zogenaamde thuiskopie. Een kopie maken voor jezelf van een werk om te kunnen oefenen, studeren of gebruiken is in Nederland toegestaan. Nederlandse auteurs krijgen hiervoor een kleine compensatie via de zogenoemde thuiskopieheffing: een klein bedrag dat geheven wordt op gegevensdragers, zoals harddisks, lege DVD’s, USB sticks, etc. Zo’n kopie is uitsluitend voor eigen gebruik. Je mag deze niet aan anderen geven. Tot voor kort viel het illegaal downloaden van software, muziek, films, etc. onder dit artikel. Het uploaden (=verspreiden onder derden) was wel strafbaar, het downloaden (=maken van een kopie) echter niet. Sinds een uitspraak van het Europees Hof op 10 april 2014 is dit illegaal downloaden ook in Nederland strafbaar geworden. Het hof vond de thuiskopieheffing niet toereikend voor compensatie.\nHet is mogelijk om de auteursrechten over de dragen. Dit wordt vaak gedaan in de muziek- en boekenbranche. De auteurs verleent bijvoorbeeld aan de producer of uitgever de exclusieve rechten om het boek te verspreiden. De auteurs krijgen hiervoor een vergoeding. Ook dan mag een producer of uitgever niet met het werk doen wat men maar wil. Er blijft sprake van ‘persoonlijkheidsrechten’. Een auteur mag dan bijvoorbeeld bezwaar maken tegen een publicatie omdat zijn / haar naam niet wordt vermeld, het gebruikt wordt in een context waarvoor de auteur het niet heeft bedoeld of omdat er door de betreffende publicatie niet het nodige respect wordt getoond voor het werk.\nPortretrecht Naast auteursrecht kennen we ook het portretrecht. Dit portretrecht houdt in dat men niet zomaar beeldmateriaal mag verspreiden indien hierop anderen op te herkennen zijn. In bepaalde gevallen is hiervoor toestemming nodig van de geportretteerde(n).\nIn het portretrecht is een ‘portret’ breder dan wat men er in bijvoorbeeld de schilderkunst of fotografie mee bedoelt. Van een portret is sprake wanneer men iemand kan herkennen. Dit kan zijn door middel van het gezicht, maar ook gelaatstrekken, een specifieke lichaamshouding, attributen of de omgeving spelen hierbij mee. Als je de identiteit van iemand uit het afgebeelde kunt achterhalen, is er in de wetgeving sprake van een portret.\nHet maakt uit of een portret wel of niet in opdracht is gemaakt. Een fotograaf kan een reportage van iemand maken. Dan is er sprake van een opdracht. Een journalist kan een foto maken van een winkelstraat. Daarop staan mogelijk ook mensen afgebeeld die op dat moment in die straat liepen. In het portretrecht wordt verschil gemaakt voor deze twee verschillende redenen.\nEen portret in opdracht Als een portret in opdracht is gemaakt, geldt het volgende. De maker van het portret bezit het auteursrecht van zijn / haar creatie. Publicatie mag echter alleen indien de maker hiervoor toestemming van de geportretteerde heeft. Degene die afgebeeld is, mag voor zichzelf en vrienden / familie een aantal kopieën maken. Ook mag hij / zij het portret beperkt in publicaties opnemen (zoals een portfolio van een model), zolang er maar bij vermeld wordt wie de maker ervan is. Commerciële publicatie mag alleen als ook de auteur hiervoor toestemming geeft.\nSamengevat: de geportretteerde mag heel beperkt en onder voorwaarden kopieën maken of publiceren. Voor breder gebruik door de auteur, de geportretteerde of anderen is altijd toestemming van zowel de auteur als de geportretteerde nodig.\nEen portret niet in opdracht Een portret dat niet in opdracht is gemaakt, mag in principe vrij worden gepubliceerd. Het kan echter zo zijn dat een afgebeeld persoon een ‘redelijk belang’ heeft om dit niet gepubliceerd te willen hebben. Dit kan bijvoorbeeld gaan om schending van privacy of omdat het beeldmateriaal iets suggereert wat niet het geval is. Ook kan het gaan om een financieel belang. Een popster verdient vaak aan producten waar zijn of haar portret op staat. Je kunt je voorstellen dat het niet is toestaan om zelf tijdens een concert een mooie foto te maken en zelf bijvoorbeeld t-shirts mee laat bedrukken.\nHet wordt anders wanneer het niet om een incidentele foto of video in de openbare ruimte gaat, maar om een foto of video gemaakt met een ‘aangebrachte’ camera. Je mag dus niet zomaar videocamera’s in de openbare ruimte ophangen. In dat geval moet je dit duidelijk vooraf aankondigen. Evenzo is iedere vorm van filmen of fotograferen in huizen of andere niet-publieke ruimtes verboden, tenzij dit vooraf duidelijk is aangekondigd.\nSoftware licenties De rechten voor software vallen voor een deel samen met het auteursrecht. Je mag dit niet zomaar vermenigvuldigen, verspreiden of openbaar maken. Je moet hiervoor een vergunning hebben, een licentie. Je kunt software niet gebruiken zonder (stilzwijgend) akkoord te zijn met de licentie. Er zijn verschillende soorten licenties om software te mogen gebruiken. Hieronder worden de meest gebruikte kort behandeld:\nCommercieel Voor commerciële software moet vooraf worden betaald. Met deze betaling krijg je het recht om de software op een vooraf bepaald aantal apparaten te installeren. Soms geldt deze licentie voor een bepaalde tijd en zul je na het verstrijken van deze periode opnieuw een licentie moeten kopen. Voorbeelden van software met deze licenties zijn Microsoft Office en Adobe Creative Cloud. Ook de meeste betaalde apps uit de app stores van Apple en Google maken gebruik van deze licentie.\nShareware Shareware mag je kopiëren en verspreiden zonder dat je er zelf iets aan verdient. Je mag het programma proberen, vaak voor een vaststaande tijd. Gebruik je deze software echter vaker, dan dien je hiervoor te betalen. Vaak zie je dat bepaalde functies niet werken totdat er een licentie is aangeschaft. Vóór de jaren ’90 was shareware software een aparte categorie. Langzaamaan zijn de verschillen met commerciële software steeds verder vervaagd. Veel apps die je nu in de app stores tegenkomt, zouden vroeger waarschijnlijk shareware zijn geweest.\nFreeware Software waarvoor de auteur een licentie verleent voor gebruik en verspreiding, heet freeware. Het is wel belangrijk om te beseffen dat de software alleen ongewijzigd mag worden verspreid. Anderen mogen er dus geen aanpassingen aan doen en vervolgens verspreiden. Een voorbeeld van freeware is Skype.\nOpen Source Open Source software heeft een licentie die ook de mogelijkheid geeft om de software aan te passen. De broncode van open source software is vrij beschikbaar en voor iedereen aan te passen. Men mag bijvoorbeeld een eigen ‘versie’ of smaak maken (dit heet een fork) en publiek maken. Er zijn heel veel open source licenties. De grootste verschillen zijn: Sommige licenties vereisen dat de aangepaste software ook de broncode openbaar moet maken Sommige licenties vereisen dat aangepaste software exact dezelfde licentie moet hanteren als de broncode waar vanaf de fork gemaakt is. Sommige licenties staan toe dat er verdient mag worden met aangepast software, andere niet. Sommige licenties staan toe dat er een tweede andere licentie aan de fork wordt verbonden, andere niet.\nTegenbewegingen Open source software is in sommige gevallen ontstaan vanuit onvrede met de beperkingen uit het auteursrecht. In bepaalde gevallen kunnen deze vooruitgang hinderen, wat sommige mensen erg vervelend vinden.\nVoor andere werken, zoals tekst, muziek en afbeeldingen is er vanuit een Amerikaans project een aantal licenties geformuleerd om meer meer duidelijkheid te geven over waarvoor materiaal gebruikt mag worden. Dit project heet Creative Commons. Bij een foto die je publiceert kun je aangeven welke CC licentie hierop van toepassing is. Ook is het gemakkelijk om zo te weten te komen of je een foto met een bepaalde CC licentie kunt gebruiken voor je website.\nEen CC-licentie wordt opgebouwd uit vier bouwstenen. Dit zijn de voorwaarden waaronder anderen gebruik mogen maken van jouw werk. De bouwstenen zijn:\nNaamsvermelding - Je staat anderen toe om het werk waar jij auteursrecht op hebt te kopiëren, distribueren, vertonen, en op te voeren, en om afgeleid materiaal te maken dat op jouw werk gebaseerd is – maar uitsluitend als jij vermeld wordt als maker.\nNiet-commercieel - Anderen mogen je werk kopiëren, vertonen, distribueren en opvoeren, alsmede materiaal wat op jouw werk gebaseerd is, mits niet voor commerciële doeleinden.\nGeenAfgeleideWerken - Anderen mogen je werk kopiëren, distribueren, vertonen en opvoeren mits het werk in de originele staat blijft. Het is niet toegestaan dat anderen jouw werk gebruiken als basis voor nieuw materiaal.\nGelijkDelen - Je staat anderen toe om van jouw werk afgeleid materiaal te maken onder de voorwaarde dat zij het onder dezelfde licentie vrijgeven als het originele werk.\nMet deze vier bouwstenen heeft men zes verschillende licenties gemaakt, waarbij het uitgangspunt is dat je altijd de naam van de originele auteur vermeldt:\nNaamsvermelding Naamsvermelding-GelijkDelen Naamsvermelding-NietCommercieel Naamsvermelding-NietCommercieel-GelijkDelen Naamsvermelding-GeenAfgeleideWerken Naamsvermelding-NietCommercieel-GeenAfgeleideWerken En mijn website? Of je materiaal legaal hebt gebruikt op je website hangt dus van heel veel factoren af. Wil je andermans materiaal gebruiken, dan zul je moeten achterhalen op welke manier de auteur het beschikbaar stelt. Soms is dat via een voor iedereen te gebruiken licentie. Het kan ook zijn dat je een auteur expliciet om toestemming zult moeten vragen of een licentie moeten kopen. In een aantal gevallen is de wetgeving zo geregeld dat je materiaal mag publiceren, zoals bij een zelf genomen foto van een winkelstraat of shots van een fotoshoot waar jij op staat. Er zijn hiervoor ook meteen beperkingen geformuleerd, waardoor je goed moet beseffen of je binnen de regels handelt.\n","description":"","tags":null,"title":"Intellectueel eigendom","uri":"/theorie/auteursrecht/"},{"content":"Some testing for different styles of links.\nMarkdown Relative to page: Relative to page up level: Static: ","description":"Some testing for different styles of links","tags":null,"title":"Links","uri":"/tests/links/"},{"content":"","description":"","tags":null,"title":"Tags","uri":"/tags/"},{"content":"Placeholder…\n","description":"","tags":null,"title":"The one and only hidden child","uri":"/yours/children-1/"}]