[{"content":"Je leert hoe je informatie op een website zet met de programmeertalen HTML en CSS.\nLesstof Khanacademy, module Intro to HTML/CSS\nIntro to html Intro to css More html tags Css text properties Web development tools (geen toetsstof) Css layout Other ways to embed css (geen toetsstof) Further learning Intellectueel eigendom\nUitlegvideo’s Er zijn (nog) geen uitlegvideo’s bij deze theorie\nLeerdoelen HTML\nJe kunt uitleggen wat een URL is en waarvoor een webbrowser deze gebruikt en je kent de volgende vier onderdelen van een URL: protocol, server, map, bestand Je kent het principe van tags zoals die in HTML gebruikt worden. Je kent de basisstructuur van een HTML-pagina. Je weet wat de begrippen parent, child en sibling betekenen en kunt de betekenis van deze begrippen toelichten. Je kunt deze begrippen toepassen op HTML. Je kent de volgende tags: \u003chtml\u003e, \u003chead\u003e, \u003cbody\u003e, \u003cp\u003e, \u003col\u003e, \u003cul\u003e, \u003cli\u003e, \u003ch1\u003e t/m \u003ch6\u003e, \u003cbr/\u003e, \u003cimg /\u003e, \u003cdiv\u003e. Je kunt uitleggen wat deze tags doen en hoe je kunt ze gebruiken. Je kunt eenvoudige stukken HTML interpreteren, dat wil zeggen dat je kunt uitleggen hoe een webbrowser omgaat met een eenvoudig stuk HTML. Je kunt wijzigingen aanbrengen in een eenvoudig stuk HTML, de syntax van de HTML tags die daarvoor nodig zijn wordt daarbij gegeven in de vraag. CSS\nJe kunt uitleggen wat er binnen de informatica met Separation of Concern wordt bedoeld en hoe dat op HTML en CSS van toepassing is. Je kunt uitleggen wat selectors, properties en values in CSS zijn en je kunt ermee werken. Dat wil zeggen dat je eenvoudige stukken CSS met selectors, properties en values kunt maken en de werking ervan kunt uitleggen. Je kunt CSS selectors maken die bestaan uit een tag, class of id of een combinatie daarvan. Je kent het verschil in selectiviteit tussen tags, classes en id’s, je kunt daarbij aangeven welke selectors meer of minder specifiek zijn. Je kent van de volgende properties de betekenis en kunt deze toepassen in CSS: font-size, width, height, color, background-color. Je kunt werken met kleuren en doorzichtigheid in CSS, door gebruik te maken van kleurnamen en rgba(). Je kunt de werking van boxen in CSS toelichten. Je kunt daarbij uitleggen wat de content, padding, border en margin van een box zijn. Je kunt eenvoudige stukken CSS interpreteren, dat wil zeggen dat je kunt uitleggen hoe een webbrowser omgaat met een eenvoudig stuk CSS en hoe het eruit ziet in een webbrowser. Je kunt wijzigingen aanbrengen in een eenvoudig stuk CSS, de properties die daarvoor nodig zijn worden beschreven in de vraag. Intellectueel eigendom\nje weet kunt kort en bondig formuleren wat het auteursrecht in Nederland inhoudt. je weet wat een thuiskopie is. je weet wat het downloadverbod inhoudt. je kent de regels rondom portretrecht (al dan niet in opdracht). je kent de verschillen tussen deze software licenties: commercieel, shareware, freeware, open source. Daarnaast kun je uitleggen op welke punten open source licenties van elkaar kunnen verschillen. je kunt uitleggen waar Creative Commons vandaan komt en kunt uitleggen uit welke licenties met verschillende bouwstenen kunnen worden gevormd. je bent in staat om je kennis van intellectueel eigendom toe te passen op een beschreven situatie. Oefentoets Een oefentoets voor deze module staat in Woots.\n","description":"","tags":null,"title":"2.1. Web Design met HTML en CSS","uri":"/theorie/webdesign/"},{"content":"Inleiding Tijdens het maken van je website zul je ongetwijfeld gemerkt hebben hoe gemakkelijk het is om informatie van andere webpagina’s over te nemen in die van jezelf. Het was vooraf bekend dat je voor de opdracht geen tekst mocht kopiëren zonder te citeren, maar wellicht heb je wel gebruik gemaakt van afbeeldingen, muziek, of HTML / javascript code.\nMaar mag dit eigenlijk wel? Dat hangt er vanaf. Hieronder zullen we een aantal aspecten van intellectueel eigendom behandelen die je zullen helpen met het beantwoorden van de vraag of je de informatie op je website rechtmatig hebt gebruikt. Daarnaast krijg je ook informatie over het gebruiken van afbeeldingen van mensen en (software)licenties.\nWat is intellectueel eigendom Intellectueel eigendom is eigenlijk iets vreemds. In de Nederlandse wet is eigendom beschermd. De spullen die jij in bezit hebt, mag een ander niet zomaar afnemen. Het is niet de bedoeling dat een medeleerling zomaar je mobiele telefoon uit je tas haalt omdat hij die wel kan gebruiken. Dan spreken we van diefstal. Maar hoe zit dit bij creatieve uitingen, of “voortbrengselen van de geest”? Mag iemand een leuk muzikaal thema uit een recent hiphop nummer gebruiken voor een eigen nummer? Mag iemand anders een werkstuk dat identiek is aan het jouwe uploaden op scholieren.com? De wetten voor de bescherming van intellectueel eigendom proberen ook dit te beschermen. Er zijn hiervoor talrijke nationale en internationale wetten.\nGeen auteursrecht voor dieren na uitspraak rechter VS in zaak selfie-aap “Dieren kunnen onder de Amerikaanse wet definitief geen aanspraak maken op het auteursrecht. Dat heeft een federale rechtbank van de Verenigde Staten bepaald in een uitspraak rond de ‘selfie-aap’.\nDe wilde kuifmakaak Naruto maakte in 2011 meerdere foto’s van zichzelf met een camera die was achtergelaten door fotograaf David Slater. Die beelden werden drie jaar later gepubliceerd in een boek, waarbij Slater zich het auteursrecht toe-eigende.\nDat leidde in 2015 tot een rechtszaak, die namens Naruto werd aangespannen door dierenrechtenorganisatie People for the Ethical Treatment of Animals (PETA). De organisatie beweerde dat de aap het auteursrecht op de selfies had. Een rechter ging daar echter niet in mee en stelde dat dieren geen auteursrecht kunnen bezitten. PETA ging vervolgens in beroep.”\nLees verder op nu.nl\nAuteursrecht In 1883 kwamen België, Duitsland, Frankrijk, Italië, Spanje, Tunesië, het Verenigd Koninkrijk en Zwitserland in Bern bij elkaar (Berner Conventie) om tot een eenduidig verdrag te komen om ook over grenzen heen het auteursrecht te beschermen. Tot dan toe waren er talloze verdragen tussen verschillende landen gesloten, maar dit werd onwerkbaar. Na verschillende conferenties kwam men in 1886 tot een verdrag dat op 5 december 1887 voor alle acht staten in werking zou treden. Deze landen vormden de Berner Unie. Een auteur uit de Berner Unie heeft in al deze landen automatisch het auteursrecht. Daar hoeven geen extra handelingen of claims voor worden gedaan. De verschillende landen zijn gebonden aan een minimum bescherming, maar mogen zelf hun wetgeving anders formuleren. Zo is in het verdrag opgenomen dat het auteursrecht pas na minimaal 50 jaare na de dood van de auteur (voor filmwerken na de publicatie) vervalt. In veel landen is dit echter langer. In Nederland wordt een periode van 70 jaar gehanteerd.\nOuders Nederlandse top-dj's willen dj-talenten beschermen “Managers die veel aan je verdienen en promotors die vooral zélf beter worden van succes van een ander: de dancewereld is een miljoenenbusiness en daar willen veel mensen een graantje van meepikken. Daar gaat het vaak mis, merken ouders van dj’s die op jonge leeftijd doorbraken.\nZij komen nu met de Dutch DJ Foundation (DDJF). Zo willen ze de belangen behartigen van Nederlandse dj’s en producers.”\nLees verder op nos.nl\nSteeds meer landen werden lid van deze Unie, waaronder Nederland in 1912. Opvallend is dat bijvoorbeeld de Verenigde Staten pas in 1989 lid werden. Dat verklaart ook (deels) waarom in de V.S. vaak zulke uitvoerige copyright claims in publicaties staan.\nHet auteursrecht is in Nederland zo geformuleerd:\n“Het auteursrecht is het uitsluitend recht van den maker van een werk van letterkunde, wetenschap of kunst, of van diens rechtverkrijgenden, om dit openbaar te maken en te verveelvoudigen, behoudens de beperkingen, bij de wet gesteld.”\nEr zijn echter situaties waarin anderen wel of gedeeltelijk zo’n werk mogen verveelvoudigen of publiceren. Zo mag berichtgeving van nieuws en actualiteiten door andere nieuwsmedia vrij worden gebruikt, mits men de bron vermeldt. Een ander geval is het citeren. Voor een citaat geldt dat het een ondergeschikte rol vervult in het werk waarin het geciteerd wordt en dat de bron vermeld moet worden. Interessant is de zogenaamde thuiskopie. Een kopie maken voor jezelf van een werk om te kunnen oefenen, studeren of gebruiken is in Nederland toegestaan. Nederlandse auteurs krijgen hiervoor een kleine compensatie via de zogenoemde thuiskopieheffing: een klein bedrag dat geheven wordt op gegevensdragers, zoals harddisks, lege DVD’s, USB sticks, etc. Zo’n kopie is uitsluitend voor eigen gebruik. Je mag deze niet aan anderen geven. Tot voor kort viel het illegaal downloaden van software, muziek, films, etc. onder dit artikel. Het uploaden (=verspreiden onder derden) was wel strafbaar, het downloaden (=maken van een kopie) echter niet. Sinds een uitspraak van het Europees Hof op 10 april 2014 is dit illegaal downloaden ook in Nederland strafbaar geworden. Het hof vond de thuiskopieheffing niet toereikend voor compensatie.\nHet is mogelijk om de auteursrechten over de dragen. Dit wordt vaak gedaan in de muziek- en boekenbranche. De auteurs verleent bijvoorbeeld aan de producer of uitgever de exclusieve rechten om het boek te verspreiden. De auteurs krijgen hiervoor een vergoeding. Ook dan mag een producer of uitgever niet met het werk doen wat men maar wil. Er blijft sprake van ‘persoonlijkheidsrechten’. Een auteur mag dan bijvoorbeeld bezwaar maken tegen een publicatie omdat zijn / haar naam niet wordt vermeld, het gebruikt wordt in een context waarvoor de auteur het niet heeft bedoeld of omdat er door de betreffende publicatie niet het nodige respect wordt getoond voor het werk.\nPortretrecht Naast auteursrecht kennen we ook het portretrecht. Dit portretrecht houdt in dat men niet zomaar beeldmateriaal mag verspreiden indien hierop anderen op te herkennen zijn. In bepaalde gevallen is hiervoor toestemming nodig van de geportretteerde(n).\nIn het portretrecht is een ‘portret’ breder dan wat men er in bijvoorbeeld de schilderkunst of fotografie mee bedoelt. Van een portret is sprake wanneer men iemand kan herkennen. Dit kan zijn door middel van het gezicht, maar ook gelaatstrekken, een specifieke lichaamshouding, attributen of de omgeving spelen hierbij mee. Als je de identiteit van iemand uit het afgebeelde kunt achterhalen, is er in de wetgeving sprake van een portret.\nHet maakt uit of een portret wel of niet in opdracht is gemaakt. Een fotograaf kan een reportage van iemand maken. Dan is er sprake van een opdracht. Een journalist kan een foto maken van een winkelstraat. Daarop staan mogelijk ook mensen afgebeeld die op dat moment in die straat liepen. In het portretrecht wordt verschil gemaakt voor deze twee verschillende redenen.\nEen portret in opdracht Als een portret in opdracht is gemaakt, geldt het volgende. De maker van het portret bezit het auteursrecht van zijn / haar creatie. Publicatie mag echter alleen indien de maker hiervoor toestemming van de geportretteerde heeft. Degene die afgebeeld is, mag voor zichzelf en vrienden / familie een aantal kopieën maken. Ook mag hij / zij het portret beperkt in publicaties opnemen (zoals een portfolio van een model), zolang er maar bij vermeld wordt wie de maker ervan is. Commerciële publicatie mag alleen als ook de auteur hiervoor toestemming geeft.\nSamengevat: de geportretteerde mag heel beperkt en onder voorwaarden kopieën maken of publiceren. Voor breder gebruik door de auteur, de geportretteerde of anderen is altijd toestemming van zowel de auteur als de geportretteerde nodig.\nEen portret niet in opdracht Een portret dat niet in opdracht is gemaakt, mag in principe vrij worden gepubliceerd. Het kan echter zo zijn dat een afgebeeld persoon een ‘redelijk belang’ heeft om dit niet gepubliceerd te willen hebben. Dit kan bijvoorbeeld gaan om schending van privacy of omdat het beeldmateriaal iets suggereert wat niet het geval is. Ook kan het gaan om een financieel belang. Een popster verdient vaak aan producten waar zijn of haar portret op staat. Je kunt je voorstellen dat het niet is toestaan om zelf tijdens een concert een mooie foto te maken en zelf bijvoorbeeld t-shirts mee laat bedrukken.\nHet wordt anders wanneer het niet om een incidentele foto of video in de openbare ruimte gaat, maar om een foto of video gemaakt met een ‘aangebrachte’ camera. Je mag dus niet zomaar videocamera’s in de openbare ruimte ophangen. In dat geval moet je dit duidelijk vooraf aankondigen. Evenzo is iedere vorm van filmen of fotograferen in huizen of andere niet-publieke ruimtes verboden, tenzij dit vooraf duidelijk is aangekondigd.\nSoftware licenties De rechten voor software vallen voor een deel samen met het auteursrecht. Je mag dit niet zomaar vermenigvuldigen, verspreiden of openbaar maken. Je moet hiervoor een vergunning hebben, een licentie. Je kunt software niet gebruiken zonder (stilzwijgend) akkoord te zijn met de licentie. Er zijn verschillende soorten licenties om software te mogen gebruiken. Hieronder worden de meest gebruikte kort behandeld:\nCommercieel Voor commerciële software moet vooraf worden betaald. Met deze betaling krijg je het recht om de software op een vooraf bepaald aantal apparaten te installeren. Soms geldt deze licentie voor een bepaalde tijd en zul je na het verstrijken van deze periode opnieuw een licentie moeten kopen. Voorbeelden van software met deze licenties zijn Microsoft Office en Adobe Creative Cloud. Ook de meeste betaalde apps uit de app stores van Apple en Google maken gebruik van deze licentie.\nShareware Shareware mag je kopiëren en verspreiden zonder dat je er zelf iets aan verdient. Je mag het programma proberen, vaak voor een vaststaande tijd. Gebruik je deze software echter vaker, dan dien je hiervoor te betalen. Vaak zie je dat bepaalde functies niet werken totdat er een licentie is aangeschaft. Vóór de jaren ’90 was shareware software een aparte categorie. Langzaamaan zijn de verschillen met commerciële software steeds verder vervaagd. Veel apps die je nu in de app stores tegenkomt, zouden vroeger waarschijnlijk shareware zijn geweest.\nFreeware Software waarvoor de auteur een licentie verleent voor gebruik en verspreiding, heet freeware. Het is wel belangrijk om te beseffen dat de software alleen ongewijzigd mag worden verspreid. Anderen mogen er dus geen aanpassingen aan doen en vervolgens verspreiden. Een voorbeeld van freeware is Skype.\nOpen Source Open Source software heeft een licentie die ook de mogelijkheid geeft om de software aan te passen. De broncode van open source software is vrij beschikbaar en voor iedereen aan te passen. Men mag bijvoorbeeld een eigen ‘versie’ of smaak maken (dit heet een fork) en publiek maken. Er zijn heel veel open source licenties. De grootste verschillen zijn: Sommige licenties vereisen dat de aangepaste software ook de broncode openbaar moet maken Sommige licenties vereisen dat aangepaste software exact dezelfde licentie moet hanteren als de broncode waar vanaf de fork gemaakt is. Sommige licenties staan toe dat er verdient mag worden met aangepast software, andere niet. Sommige licenties staan toe dat er een tweede andere licentie aan de fork wordt verbonden, andere niet.\nTegenbewegingen Open source software is in sommige gevallen ontstaan vanuit onvrede met de beperkingen uit het auteursrecht. In bepaalde gevallen kunnen deze vooruitgang hinderen, wat sommige mensen erg vervelend vinden.\nVoor andere werken, zoals tekst, muziek en afbeeldingen is er vanuit een Amerikaans project een aantal licenties geformuleerd om meer meer duidelijkheid te geven over waarvoor materiaal gebruikt mag worden. Dit project heet Creative Commons. Bij een foto die je publiceert kun je aangeven welke CC licentie hierop van toepassing is. Ook is het gemakkelijk om zo te weten te komen of je een foto met een bepaalde CC licentie kunt gebruiken voor je website.\nEen CC-licentie wordt opgebouwd uit vier bouwstenen. Dit zijn de voorwaarden waaronder anderen gebruik mogen maken van jouw werk. De bouwstenen zijn:\nNaamsvermelding - Je staat anderen toe om het werk waar jij auteursrecht op hebt te kopiëren, distribueren, vertonen, en op te voeren, en om afgeleid materiaal te maken dat op jouw werk gebaseerd is – maar uitsluitend als jij vermeld wordt als maker.\nNiet-commercieel - Anderen mogen je werk kopiëren, vertonen, distribueren en opvoeren, alsmede materiaal wat op jouw werk gebaseerd is, mits niet voor commerciële doeleinden.\nGeenAfgeleideWerken - Anderen mogen je werk kopiëren, distribueren, vertonen en opvoeren mits het werk in de originele staat blijft. Het is niet toegestaan dat anderen jouw werk gebruiken als basis voor nieuw materiaal.\nGelijkDelen - Je staat anderen toe om van jouw werk afgeleid materiaal te maken onder de voorwaarde dat zij het onder dezelfde licentie vrijgeven als het originele werk.\nMet deze vier bouwstenen heeft men zes verschillende licenties gemaakt, waarbij het uitgangspunt is dat je altijd de naam van de originele auteur vermeldt:\nNaamsvermelding Naamsvermelding-GelijkDelen Naamsvermelding-NietCommercieel Naamsvermelding-NietCommercieel-GelijkDelen Naamsvermelding-GeenAfgeleideWerken Naamsvermelding-NietCommercieel-GeenAfgeleideWerken En mijn website? Of je materiaal legaal hebt gebruikt op je website hangt dus van heel veel factoren af. Wil je andermans materiaal gebruiken, dan zul je moeten achterhalen op welke manier de auteur het beschikbaar stelt. Soms is dat via een voor iedereen te gebruiken licentie. Het kan ook zijn dat je een auteur expliciet om toestemming zult moeten vragen of een licentie moeten kopen. In een aantal gevallen is de wetgeving zo geregeld dat je materiaal mag publiceren, zoals bij een zelf genomen foto van een winkelstraat of shots van een fotoshoot waar jij op staat. Er zijn hiervoor ook meteen beperkingen geformuleerd, waardoor je goed moet beseffen of je binnen de regels handelt.\n","description":"","tags":null,"title":"2.1.1. Intellectueel eigendom","uri":"/theorie/webdesign_auteursrecht/"},{"content":"Je gaat je eigen website maken!\nOpdrachtbeschrijving De opdracht in het kort is: …\nDEZE PAGINA BEVAT NOG NIET DE GOEDE INFO Inschrijven Je schrijft je in via het onderstaande formulier dat de docent aanlevert.\n4hin1, link naar formulier volgt 4hin2, link naar formulier volgt 4vin1, link naar formulier volgt 4vin2, link naar formulier volgt Game kiezen Je bent vrij om zelf te kiezen welke game je gaat maken. Je docent moet de game die je kiest goedkeuren. Enkele voorbeelden van een game die je kunt maken zijn: Tennis, Flappy Bird, Snake (voorganger van Slither.io), een Break Out Game (zoals Arkanoid), een race spelletje, een eenvoudige platform game (zoals pacman), een puzzelspel enzovoort.\nWerkwijze Je maakt deze opdracht in een team van twee personen. De docent geeft aan hoe de teams gemaakt worden. Je bepaalt zelf hoe je het werk binnen je team verdeelt, zolang iedereen een gelijkwaardige bijdrage levert. Je krijgt één cijfer per team, maar de docent kan hiervan afwijken als teamleden geen gelijkwaardige bijdrage hebben geleverd. Je krijgt van de docent startcode voor deze opdracht. Deze staat klaar in een repo op GitHub. Er is één repo per team. Je maakt code in Replit (havo) of Gitpod (vwo). Elk teamlid heeft zijn eigen Replit of Gitpod omgeving. Elke week (liefst vaker) slaan alle teamleden hun tussentijdse werk op in de repo op GitHub. Zo zorgen jullie ervoor dat de laatste werkende versie van jullie game steeds op GitHub staat. Deze opdracht maak je alsof het een echt project is. Je maakt eerst een planning. Daarna kijk je wekelijks of je nog volgens plan loopt. Als je niet volgens plan loopt, dan stuur je bij. In de les word je hiermee geholpen, maar uiteindelijk moet jij zorgen dat je op tijd klaar bent en een goed resultaat oplevert. Beoordeling Het cijfer dat je voor je PO krijgt wordt vanuit vier invalshoeken bepaald:\nbasiswerking uiterlijk techniek inzet, planning en samenwerking Minimale eisen\nVoordat je een cijfer krijgt voor je PO, wordt gekeken of je werk voldoet aan de minimale eisen. Werk dat niet voldoet aan de minimale eisen krijgt het cijfer 1,0. De minimale eisen zijn:\nDe inhoud van je webshop is moreel verantwoord: het is niet beledigend, visueel gewelddadig of op andere manieren onfatsoenlijk. Natuurlijk mag je overleggen met klasgenoten en mag je op internet kijken hoe je bepaalde dingen kunt maken. Let wel op dat je geen plagiaat pleegt. Je mag maximaal 5 regels code overnemen van andere leerlingen of internet en je schrijft in het commentaar erbij waar je het voorbeeld vandaan hebt. Dat geldt ook voor code die je zelf vertaalt naar het Nederlands. Overtypen van code uit een Youtube-video of een tutorial van internet volgen en dat resultaat inleveren is niet toegestaan. Je gebruikt de startcode die je krijgt. Je gebruikt het stappenplan dat in README.md van het template staat. Een download in zip-formaat van je opdracht mag maximaal 50 MB groot zijn. Werking en aantrekkelijkheid\nSpel start op Het spel werkt (hoe klein ook) Behaalde punten zijn zichtbaar bij game-over Het doel en de bediening van het spel is duidelijk Aantrekkelijk uiterlijk Prettige bediening Eenvoudig om mee te beginnen en moeilijker als je verder komt Afwisselend Techniek\nDe code volgt de lijn van het template De code is netjes en duidelijk leesbaar De code bevat geen dubbele stukken code Je hebt de technieken gebruikt die in de programmeerlessen zijn aangeboden. Je hebt dingen toegevoegd waarvan je zelf hebt uitgezocht hoe ze werken Inzet, planning en samenwerking\nJe toont inzet tijdens de lessen De planning is vooraf gemaakt, gevolgd en als nodig bijgesteld. De taakverdeling is duidelijk en alle teamleden dragen in gelijke mate bij. Het werk is verdeeld over de weken waarin aan de opdracht kon worden gewerkt. Inleveren De deadline voor inleveren vind je in de lesplanner. Je kunt vragen stellen tot de laatste les voor de deadline. Je zorgt dat alle bestanden in die nodig zijn om je spel te spelen in GitHub staan, dit zijn ten minste: index.html, style.css en script.js. Als je plaatjes gebruikt, dan staan die er ook bij. Je zorgt dat het README.md bestand met je planning aanwezig is. Je hebt aangegeven welke onderdelen gereed zijn. Uit de versie historie in GitHub blijkt hoe je je planning tussentijds hebt gevolgd en bijgesteld. De laatste versie van je PO die op het moment van de deadline in GitHub staat, wordt gebruikt voor de beoordeling. Startcode Uitlegvideo’s - algemene gitpod en rpelit link - stappenplan en uitleg van de repo en gebruikte technieken zet je in de readme - rijkere uitleg zoals video's of code voorbeelden zetten we op de website - zet in de description van de repo een link naar informatica.emmauscollege.nl - hoe verspreiden we de link naar het google-docs document waarin leerlingen zich opgeven voor de groepjes en hun github account opgeven? =\u003e op de pagina van de opdracht en dan bovenaan bij de opdracht een kopje \"inschrijven voor deze opdracht\" toevoegen. ","description":"","tags":null,"title":"3.1 Website","uri":"/opdrachten/website/"},{"content":"Je leert hoe een computer allerlei soorten informatie opslaat.\nLesstof Informatica Actief, module informatie digitaal\n1: Digitale afbeeldingen, pixels met kleur (alleen theorie 1 t/m 7) 2: Bits en Bytes (alleen theorie 1 t/m 5) 3: Talstelsels: decimale en binaire getallen (alleen theorie 1 t/m 9) 4: Rekenen met binaire getallen (overslaan) 5: Digitale tekst (alleen theorie 1 t/m 9) 6: Verschillende soorten afbeeldingen (alleen theorie 1 t/m 12) 7: Bewegend beeld en geluid (alleen theorie 1 t/m 7) 8: Digitale informatie in bestanden (alleen theorie 1 t/m 5) 9: Diagnostische toets (overslaan) Beeldbewerking\nUitlegvideo’s Leerdoelen Informatie digitaal\nJe kunt binaire getallen omzet naar decimale getallen en andersom. Je kunt binaire getallen omzet naar hexadecimale getallen en andersom. Je kunt decimale getallen omzet naar hexadecimale getallen en andersom. Je kunt uitrekenen uit hoeveel bits of bytes een kilobyte, megabyte, gigabyte of terabyte bestaat. Je kunt uitleggen waarin de klassieke maten van kilo-, mega, gigabyte etc. afwijken van de SI-maten. Je weet wat het verschil is tussen ASCII en Unicode en kunt uitleggen hoe ze tekst digitaliseren. Je kunt uitleggen hoe het RGB-kleurenmodel en het CMYK-kleurenmodel werken, je kunt de verschillen tussen beide kleurenmodellen benoemen en je kunt de modellen gebruiken om kleuren te maken en kleuren te veranderen. Je kent de betekenis van het begrip resolutie Je kunt uitleggen hoe plaatjes worden opgeslagen door een computer Je kent verschillende bestandsformaten voor plaatjes, zoals bmp,gif,jpg en png en de eigenschappen waarin ze van elkaar verschillen Je kunt aangeven welk bestandformast voor plaatjes het best geschikt is voor een beschreven situatie Je kunt uitleggen hoe muziek wordt opgeslagen door een computer Je kunt uitleggen hoe video wordt opgeslagen door een computer Je kunt uitleggen wat een extensie is en waar deze voor dient Je kunt uitleggen wat compressie is aan de hand van voorbeelden (tekst, geluid, plaatjes en video) en je kent het verschil tussen lossless en niet-lossless compressie. Alleen vwo: Je kunt op basis van een beschrijving van een compressie algortime een klein voorbeeld comprimeren en decomprimeren. Beeldbewerking\nJe kunt het aantal pixels van een plaatje aanpassen Je kunt een plaatje bijsnijden (Engels: crop) Je kunt een plaatje in diverse bestand-formaten omzetten (bijvoorbeeld .jpg, .png, .gif) Je kunt basisinstellingen van de kleuren in een plaatje aanpassen (bijvoorbeeld contrast) Je kunt de achtergrond van een plaatje transparant maken, een vast kleur maken, vervangen door een ander plaatje. Je begrijpt wat je kunt doen met lagen en je kunt dat uitleggen aan de hand van een gegeven situatie. Oefentoets Een oefentoets voor deze module staat in Woots.\n","description":"","tags":null,"title":"2.2. Digitale informatie","uri":"/theorie/informatie/"},{"content":"Je gaat je eigen game programmeren!\nOpdrachtbeschrijving De opdracht in het kort is: Maak in groepjes van twee je eigen spel in JavaScript. Je gebruikt de startcode en maakt gebruik van de p5js-library.\nInschrijven Je schrijft je in via het onderstaande formulier dat de docent aanlevert.\n4hin1, link naar formulier volgt 4hin2, link naar formulier volgt 4vin1, link naar formulier volgt 4vin2, link naar formulier volgt Game kiezen Je bent vrij om zelf te kiezen welke game je gaat maken. Je docent moet de game die je kiest goedkeuren. Enkele voorbeelden van een game die je kunt maken zijn: Tennis, Flappy Bird, Snake (voorganger van Slither.io), een Break Out Game (zoals Arkanoid), een race spelletje, een eenvoudige platform game (zoals pacman), een puzzelspel enzovoort.\nWerkwijze Je maakt deze opdracht in een team van twee personen. De docent geeft aan hoe de teams gemaakt worden. Je bepaalt zelf hoe je het werk binnen je team verdeelt, zolang iedereen een gelijkwaardige bijdrage levert. Je krijgt één cijfer per team, maar de docent kan hiervan afwijken als teamleden geen gelijkwaardige bijdrage hebben geleverd. Je krijgt van de docent startcode voor deze opdracht. Deze staat klaar in een repo op GitHub. Er is één repo per team. Je maakt code in Replit (havo) of Gitpod (vwo). Elk teamlid heeft zijn eigen Replit of Gitpod omgeving. Elke week (liefst vaker) slaan alle teamleden hun tussentijdse werk op in de repo op GitHub. Zo zorgen jullie ervoor dat de laatste werkende versie van jullie game steeds op GitHub staat. Deze opdracht maak je alsof het een echt project is. Je maakt eerst een planning. Daarna kijk je wekelijks of je nog volgens plan loopt. Als je niet volgens plan loopt, dan stuur je bij. In de les word je hiermee geholpen, maar uiteindelijk moet jij zorgen dat je op tijd klaar bent en een goed resultaat oplevert. Beoordeling Het cijfer dat je voor je PO krijgt wordt vanuit verschillende invalshoeken bepaald:\nMinimale eisen\nVoordat je een cijfer krijgt voor je PO, wordt gekeken of je werk voldoet aan de minimale eisen. Werk dat niet voldoet aan de minimale eisen krijgt het cijfer 1,0. De minimale eisen zijn:\nDe inhoud van je webshop is moreel verantwoord: het is niet beledigend, visueel gewelddadig of op andere manieren onfatsoenlijk. Natuurlijk mag je overleggen met klasgenoten en mag je op internet kijken hoe je bepaalde dingen kunt maken. Let wel op dat je geen plagiaat pleegt. Je mag maximaal 5 regels code overnemen van andere leerlingen of internet en je schrijft in het commentaar erbij waar je het voorbeeld vandaan hebt. Dat geldt ook voor code die je zelf vertaalt naar het Nederlands. Overtypen van code uit een Youtube-video of een tutorial van internet volgen en dat resultaat inleveren is niet toegestaan. Je gebruikt de startcode die je krijgt. Je gebruikt het stappenplan dat in README.md van het template staat. Een download in zip-formaat van je opdracht mag maximaal 50 MB groot zijn. Werking en aantrekkelijkheid\nSpel start op Het spel werkt (hoe klein ook) Behaalde punten zijn zichtbaar bij game-over Het doel en de bediening van het spel is duidelijk Aantrekkelijk uiterlijk Prettige bediening Eenvoudig om mee te beginnen en moeilijker als je verder komt Afwisselend Techniek\nDe code volgt de lijn van het template De code is netjes en duidelijk leesbaar De code bevat geen dubbele stukken code Je hebt de technieken gebruikt die in de programmeerlessen zijn aangeboden. Je hebt dingen toegevoegd waarvan je zelf hebt uitgezocht hoe ze werken Inzet, planning en samenwerking\nJe toont inzet tijdens de lessen De planning is vooraf gemaakt, gevolgd en als nodig bijgesteld. De taakverdeling is duidelijk en alle teamleden dragen in gelijke mate bij. Het werk is verdeeld over de weken waarin aan de opdracht kon worden gewerkt. Inleveren De deadline voor inleveren vind je in de lesplanner. Je kunt vragen stellen tot de laatste les voor de deadline. Je zorgt dat alle bestanden in die nodig zijn om je spel te spelen in GitHub staan, dit zijn ten minste: index.html, style.css en script.js. Als je plaatjes gebruikt, dan staan die er ook bij. Je zorgt dat het README.md bestand met je planning aanwezig is. Je hebt aangegeven welke onderdelen gereed zijn. Uit de versie historie in GitHub blijkt hoe je je planning tussentijds hebt gevolgd en bijgesteld. De laatste versie van je PO die op het moment van de deadline in GitHub staat, wordt gebruikt voor de beoordeling. Startcode Uitlegvideo’s - algemene gitpod en rpelit link - stappenplan en uitleg van de repo en gebruikte technieken zet je in de readme - rijkere uitleg zoals video's of code voorbeelden zetten we op de website - zet in de description van de repo een link naar informatica.emmauscollege.nl - hoe verspreiden we de link naar het google-docs document waarin leerlingen zich opgeven voor de groepjes en hun github account opgeven? =\u003e op de pagina van de opdracht en dan bovenaan bij de opdracht een kopje \"inschrijven voor deze opdracht\" toevoegen. ","description":"","tags":null,"title":"3.2 Game","uri":"/opdrachten/game/"},{"content":"Je leert hoe je eenvoudige programma’s kunt maken met de programmeertaal Javascript en de p5js library.\nLesstof Khanacademy, module Intro to JS\nIntro to programming Drawing basics Drawing basics Variables Animation basics Interactive programs Becoming a community coder (kort) Bonus: Resizing with variables Text and strings Functions (lang) Logic and if Statements (lang) Debugging programs (kort) Looping (lang) Writing clean code (kort) Arrays (lang) Objects (overslaan) Object-Oriented Design (overslaan) Becoming a better programmer Uitlegvideo’s Leerdoelen Programmeertalen\nJe kunt uitleggen wat machinetaal is. Je kunt uitleggen wat een compiler is. Je kunt uitleggen wat een library is. Je kunt drie hogere programmeertalen opnoemen. Je kunt uitleggen wat er binnen de informatica bedoeld wordt met het begrip grammatica. Je kunt uitleggen wat een variabele is. Je kunt uitleggen wat declareren en definiëren van een variabele is. Je kunt uitleggen wat een datatype is Je kent de datatypen boolean, number en string en begrijpt welke waarden erin opgeslagen worden Je kunt uitleggen wat controlestructuren zijn en je kent de volgende voorbeelden: if-statement, for-loop, while-loop. Je kunt uitleggen waar abstractie voor dient. Je kunt uitleggen wat een functie is. Je kunt uitleggen wat declareren, definiëren en aanroepen van een functie is. Je kunt uitleggen wat een parameter van een functie is. Je kunt uitleggen wat het resultaat van een functie is. Je kunt uitleggen wat het verschil is tussen globale en lokale variabelen. Je kunt de leesbaarheid van code verbeteren door gebruik te maken van commentaar, lay-out en structuur. Javascript\nje kunt commentaarregels gebruiken. je kunt aangeven welke waarden bepaalde variabelen hebben aan het einde van een stukje computercode. je kunt op basis van een stukje code zelf de bijbehorende schermuitvoer tekenen. je kunt met behulp van naslagmateriaal zelf computercode schrijven om een vraag te beantwoorden. je weet hoe je in een tekening animatie aanbrengt. je begrijpt wat variabelen zijn en hoe je deze kunt gebruiken. je begrijpt wat een logische expressie is en hoe je deze kunt gebruiken. je begrijpt hoe de logische operatoren “en”, “of” en “niet” werken en je kunt deze gebruiken. je begrijpt hoe de vergelijkingsoperatoren “groter dan”, “kleiner dan”, “groter-gelijk dan”, “kleiner-gelijk dan”, “gelijk aan” en “ongelijk aan” werken en je kunt deze gebruiken. je weet wat de datatypen boolean, number en string zijn en kunt deze gebruiken. je begrijpt hoe een if-statement werkt en hoe je deze kunt gebruiken. je begrijpt hoe een while-loop en een for-loop werken en hoe je deze kunt gebruiken. je kunt een while-loop omzetten naar een for-loop en andersom. je begrijpt hoe een for-loop in een for-loop werkt en hoe je dit kunt gebruiken. je begrijpt wat arrays zijn en hoe je deze kunt gebruiken. je kunt een array doorlopen met een for-loop. Alleen vwo: je kunt een twee-dimensionale array doorlopen met een for-loop in een for-loop je begrijpt hoe een functie werkt en hoe je deze kunt gebruiken. je begrijpt wat parameters van een functie zijn en hoe je deze gebruikt. je begrijpt wat het resultaat van een functie is en hoe je dit gebruikt. je begrijpt wat er op het syntaxblad Javascript staat en dit kunt toelichten en gebruiken. Oefentoets Een oefentoets voor deze module staat in Woots.\n","description":"","tags":null,"title":"2.3. Programmeren met Javascript","uri":"/theorie/programmeren/"},{"content":"Je gaat je eigen webshop maken!\nOpdrachtbeschrijving De opdracht in het kort is: …\nDEZE PAGINA BEVAT NOG NIET DE GOEDE INFO Inschrijven Je schrijft je in via het onderstaande formulier dat de docent aanlevert.\n4hin1, link naar formulier volgt 4hin2, link naar formulier volgt 4vin1, link naar formulier volgt 4vin2, link naar formulier volgt Game kiezen Je bent vrij om zelf te kiezen welke game je gaat maken. Je docent moet de game die je kiest goedkeuren. Enkele voorbeelden van een game die je kunt maken zijn: Tennis, Flappy Bird, Snake (voorganger van Slither.io), een Break Out Game (zoals Arkanoid), een race spelletje, een eenvoudige platform game (zoals pacman), een puzzelspel enzovoort.\nWerkwijze Je maakt deze opdracht in een team van twee personen. De docent geeft aan hoe de teams gemaakt worden. Je bepaalt zelf hoe je het werk binnen je team verdeelt, zolang iedereen een gelijkwaardige bijdrage levert. Je krijgt één cijfer per team, maar de docent kan hiervan afwijken als teamleden geen gelijkwaardige bijdrage hebben geleverd. Je krijgt van de docent startcode voor deze opdracht. Deze staat klaar in een repo op GitHub. Er is één repo per team. Je maakt code in Replit (havo) of Gitpod (vwo). Elk teamlid heeft zijn eigen Replit of Gitpod omgeving. Elke week (liefst vaker) slaan alle teamleden hun tussentijdse werk op in de repo op GitHub. Zo zorgen jullie ervoor dat de laatste werkende versie van jullie game steeds op GitHub staat. Deze opdracht maak je alsof het een echt project is. Je maakt eerst een planning. Daarna kijk je wekelijks of je nog volgens plan loopt. Als je niet volgens plan loopt, dan stuur je bij. In de les word je hiermee geholpen, maar uiteindelijk moet jij zorgen dat je op tijd klaar bent en een goed resultaat oplevert. Beoordeling Het cijfer dat je voor je PO krijgt wordt vanuit vier invalshoeken bepaald:\nbasiswerking uiterlijk techniek inzet, planning en samenwerking Minimale eisen\nVoordat je een cijfer krijgt voor je PO, wordt gekeken of je werk voldoet aan de minimale eisen. Werk dat niet voldoet aan de minimale eisen krijgt het cijfer 1,0. De minimale eisen zijn:\nDe inhoud van je webshop is moreel verantwoord: het is niet beledigend, visueel gewelddadig of op andere manieren onfatsoenlijk. Natuurlijk mag je overleggen met klasgenoten en mag je op internet kijken hoe je bepaalde dingen kunt maken. Let wel op dat je geen plagiaat pleegt. Je mag maximaal 5 regels code overnemen van andere leerlingen of internet en je schrijft in het commentaar erbij waar je het voorbeeld vandaan hebt. Dat geldt ook voor code die je zelf vertaalt naar het Nederlands. Overtypen van code uit een Youtube-video of een tutorial van internet volgen en dat resultaat inleveren is niet toegestaan. Je gebruikt de startcode die je krijgt. Je gebruikt het stappenplan dat in README.md van het template staat. Een download in zip-formaat van je opdracht mag maximaal 50 MB groot zijn. Werking en aantrekkelijkheid\nSpel start op Het spel werkt (hoe klein ook) Behaalde punten zijn zichtbaar bij game-over Het doel en de bediening van het spel is duidelijk Aantrekkelijk uiterlijk Prettige bediening Eenvoudig om mee te beginnen en moeilijker als je verder komt Afwisselend Techniek\nDe code volgt de lijn van het template De code is netjes en duidelijk leesbaar De code bevat geen dubbele stukken code Je hebt de technieken gebruikt die in de programmeerlessen zijn aangeboden. Je hebt dingen toegevoegd waarvan je zelf hebt uitgezocht hoe ze werken Inzet, planning en samenwerking\nJe toont inzet tijdens de lessen De planning is vooraf gemaakt, gevolgd en als nodig bijgesteld. De taakverdeling is duidelijk en alle teamleden dragen in gelijke mate bij. Het werk is verdeeld over de weken waarin aan de opdracht kon worden gewerkt. Inleveren De deadline voor inleveren vind je in de lesplanner. Je kunt vragen stellen tot de laatste les voor de deadline. Je zorgt dat alle bestanden in die nodig zijn om je spel te spelen in GitHub staan, dit zijn ten minste: index.html, style.css en script.js. Als je plaatjes gebruikt, dan staan die er ook bij. Je zorgt dat het README.md bestand met je planning aanwezig is. Je hebt aangegeven welke onderdelen gereed zijn. Uit de versie historie in GitHub blijkt hoe je je planning tussentijds hebt gevolgd en bijgesteld. De laatste versie van je PO die op het moment van de deadline in GitHub staat, wordt gebruikt voor de beoordeling. Startcode Uitlegvideo’s - algemene gitpod en rpelit link - stappenplan en uitleg van de repo en gebruikte technieken zet je in de readme - rijkere uitleg zoals video's of code voorbeelden zetten we op de website - zet in de description van de repo een link naar informatica.emmauscollege.nl - hoe verspreiden we de link naar het google-docs document waarin leerlingen zich opgeven voor de groepjes en hun github account opgeven? =\u003e op de pagina van de opdracht en dan bovenaan bij de opdracht een kopje \"inschrijven voor deze opdracht\" toevoegen. ","description":"","tags":null,"title":"3.3 Webshop","uri":"/opdrachten/webshop/"},{"content":"Je leert hoe je problemen kunt oplossen met algoritmen, je gebruikt daarbij stroomdiagrammen en de programmeertaal Javascript.\nLesstof Eenvoudige algoritmen\nStroomdiagrammen (Engels: flowcharts) Programmeeroefeningen Complexe algoritmen (vwo)\nLespresentatie, sorteren, kortste pad, efficiency Uitlegvideo’s Uitlegvideo’s bij deze theorie moeten we nog opzoeken\nLeerdoelen Eenvoudige algoritmen\nje kunt uitleggen wat een algoritme is je kunt uitleggen wat een flowchart is en waarvoor je deze gebruikt je kunt flowcharts lezen, dat betekent dat je de output van een flowchart kunt bepalen als de input en de flowchart gegeven worden je kunt een flowchart maken van een eenvoudig algoritme waarvan je een korte beschrijving en een voorbeeld van de input en de output krijgt. Een eenvoudig algoritme is een algoritme waarbij een rij wordt doorlopen, zoals bijvoorbeeld: zoek het grootste getal in een rij, bereken het gemiddelde van alle getallen in een rij, tel het aantal keer dat een bepaalde letter voorkomt in een tekst. je kunt een flowcharts omzetten naar JavaScript code en JavaScript code kunnen omzetten naar een flowchart. Complexe algoritmen\nvolgt nog Oefentoets Een oefentoets voor deze module staat in Woots.\n","description":"","tags":null,"title":"2.4. Algoritmen in Javascript","uri":"/theorie/algoritmen/"},{"content":"Je gaat je eigen website maken!\nOpdrachtbeschrijving De opdracht in het kort is: …\nDEZE PAGINA BEVAT NOG NIET DE GOEDE INFO Inschrijven Je schrijft je in via het onderstaande formulier dat de docent aanlevert.\n4hin1, link naar formulier volgt 4hin2, link naar formulier volgt 4vin1, link naar formulier volgt 4vin2, link naar formulier volgt Game kiezen Je bent vrij om zelf te kiezen welke game je gaat maken. Je docent moet de game die je kiest goedkeuren. Enkele voorbeelden van een game die je kunt maken zijn: Tennis, Flappy Bird, Snake (voorganger van Slither.io), een Break Out Game (zoals Arkanoid), een race spelletje, een eenvoudige platform game (zoals pacman), een puzzelspel enzovoort.\nWerkwijze Je maakt deze opdracht in een team van twee personen. De docent geeft aan hoe de teams gemaakt worden. Je bepaalt zelf hoe je het werk binnen je team verdeelt, zolang iedereen een gelijkwaardige bijdrage levert. Je krijgt één cijfer per team, maar de docent kan hiervan afwijken als teamleden geen gelijkwaardige bijdrage hebben geleverd. Je krijgt van de docent startcode voor deze opdracht. Deze staat klaar in een repo op GitHub. Er is één repo per team. Je maakt code in Replit (havo) of Gitpod (vwo). Elk teamlid heeft zijn eigen Replit of Gitpod omgeving. Elke week (liefst vaker) slaan alle teamleden hun tussentijdse werk op in de repo op GitHub. Zo zorgen jullie ervoor dat de laatste werkende versie van jullie game steeds op GitHub staat. Deze opdracht maak je alsof het een echt project is. Je maakt eerst een planning. Daarna kijk je wekelijks of je nog volgens plan loopt. Als je niet volgens plan loopt, dan stuur je bij. In de les word je hiermee geholpen, maar uiteindelijk moet jij zorgen dat je op tijd klaar bent en een goed resultaat oplevert. Beoordeling Het cijfer dat je voor je PO krijgt wordt vanuit vier invalshoeken bepaald:\nbasiswerking uiterlijk techniek inzet, planning en samenwerking Minimale eisen\nVoordat je een cijfer krijgt voor je PO, wordt gekeken of je werk voldoet aan de minimale eisen. Werk dat niet voldoet aan de minimale eisen krijgt het cijfer 1,0. De minimale eisen zijn:\nDe inhoud van je webshop is moreel verantwoord: het is niet beledigend, visueel gewelddadig of op andere manieren onfatsoenlijk. Natuurlijk mag je overleggen met klasgenoten en mag je op internet kijken hoe je bepaalde dingen kunt maken. Let wel op dat je geen plagiaat pleegt. Je mag maximaal 5 regels code overnemen van andere leerlingen of internet en je schrijft in het commentaar erbij waar je het voorbeeld vandaan hebt. Dat geldt ook voor code die je zelf vertaalt naar het Nederlands. Overtypen van code uit een Youtube-video of een tutorial van internet volgen en dat resultaat inleveren is niet toegestaan. Je gebruikt de startcode die je krijgt. Je gebruikt het stappenplan dat in README.md van het template staat. Een download in zip-formaat van je opdracht mag maximaal 50 MB groot zijn. Werking en aantrekkelijkheid\nSpel start op Het spel werkt (hoe klein ook) Behaalde punten zijn zichtbaar bij game-over Het doel en de bediening van het spel is duidelijk Aantrekkelijk uiterlijk Prettige bediening Eenvoudig om mee te beginnen en moeilijker als je verder komt Afwisselend Techniek\nDe code volgt de lijn van het template De code is netjes en duidelijk leesbaar De code bevat geen dubbele stukken code Je hebt de technieken gebruikt die in de programmeerlessen zijn aangeboden. Je hebt dingen toegevoegd waarvan je zelf hebt uitgezocht hoe ze werken Inzet, planning en samenwerking\nJe toont inzet tijdens de lessen De planning is vooraf gemaakt, gevolgd en als nodig bijgesteld. De taakverdeling is duidelijk en alle teamleden dragen in gelijke mate bij. Het werk is verdeeld over de weken waarin aan de opdracht kon worden gewerkt. Inleveren De deadline voor inleveren vind je in de lesplanner. Je kunt vragen stellen tot de laatste les voor de deadline. Je zorgt dat alle bestanden in die nodig zijn om je spel te spelen in GitHub staan, dit zijn ten minste: index.html, style.css en script.js. Als je plaatjes gebruikt, dan staan die er ook bij. Je zorgt dat het README.md bestand met je planning aanwezig is. Je hebt aangegeven welke onderdelen gereed zijn. Uit de versie historie in GitHub blijkt hoe je je planning tussentijds hebt gevolgd en bijgesteld. De laatste versie van je PO die op het moment van de deadline in GitHub staat, wordt gebruikt voor de beoordeling. Startcode Uitlegvideo’s - algemene gitpod en rpelit link - stappenplan en uitleg van de repo en gebruikte technieken zet je in de readme - rijkere uitleg zoals video's of code voorbeelden zetten we op de website - zet in de description van de repo een link naar informatica.emmauscollege.nl - hoe verspreiden we de link naar het google-docs document waarin leerlingen zich opgeven voor de groepjes en hun github account opgeven? =\u003e op de pagina van de opdracht en dan bovenaan bij de opdracht een kopje \"inschrijven voor deze opdracht\" toevoegen. ","description":"","tags":null,"title":"3.4 Robot","uri":"/opdrachten/robot/"},{"content":"Chapter 4 This could be yours Start your success story. Now!\n","description":"","tags":null,"title":"This could be yours","uri":"/yours/"},{"content":"Je leert hoe je heel veel informatie kunt bekijken en bewaren in databases met de programmeertaal SQL.\nTheorie Khanacademy, module Intro to SQL\nSQL basics More advanced SQL queries Relational queries in SQL (lang) Modifying databases with SQL Further learning in SQL (overslaan) Ruimtedatabase (alleen vwo)\nOpgaven met antwoorden in Woots Uitlegvideo’s met antwoorden Uitlegvideo’s Leerdoelen Databases\nvolgt nog Oefentoets Een oefentoets voor deze module staat in Woots.\n","description":"","tags":null,"title":"2.5. Databases met SQL","uri":"/theorie/databases/"},{"content":"Je gaat je eigen website maken!\nOpdrachtbeschrijving De opdracht in het kort is: …\nDEZE PAGINA BEVAT NOG NIET DE GOEDE INFO Inschrijven Je schrijft je in via het onderstaande formulier dat de docent aanlevert.\n4hin1, link naar formulier volgt 4hin2, link naar formulier volgt 4vin1, link naar formulier volgt 4vin2, link naar formulier volgt Game kiezen Je bent vrij om zelf te kiezen welke game je gaat maken. Je docent moet de game die je kiest goedkeuren. Enkele voorbeelden van een game die je kunt maken zijn: Tennis, Flappy Bird, Snake (voorganger van Slither.io), een Break Out Game (zoals Arkanoid), een race spelletje, een eenvoudige platform game (zoals pacman), een puzzelspel enzovoort.\nWerkwijze Je maakt deze opdracht in een team van twee personen. De docent geeft aan hoe de teams gemaakt worden. Je bepaalt zelf hoe je het werk binnen je team verdeelt, zolang iedereen een gelijkwaardige bijdrage levert. Je krijgt één cijfer per team, maar de docent kan hiervan afwijken als teamleden geen gelijkwaardige bijdrage hebben geleverd. Je krijgt van de docent startcode voor deze opdracht. Deze staat klaar in een repo op GitHub. Er is één repo per team. Je maakt code in Replit (havo) of Gitpod (vwo). Elk teamlid heeft zijn eigen Replit of Gitpod omgeving. Elke week (liefst vaker) slaan alle teamleden hun tussentijdse werk op in de repo op GitHub. Zo zorgen jullie ervoor dat de laatste werkende versie van jullie game steeds op GitHub staat. Deze opdracht maak je alsof het een echt project is. Je maakt eerst een planning. Daarna kijk je wekelijks of je nog volgens plan loopt. Als je niet volgens plan loopt, dan stuur je bij. In de les word je hiermee geholpen, maar uiteindelijk moet jij zorgen dat je op tijd klaar bent en een goed resultaat oplevert. Beoordeling Het cijfer dat je voor je PO krijgt wordt vanuit vier invalshoeken bepaald:\nbasiswerking uiterlijk techniek inzet, planning en samenwerking Minimale eisen\nVoordat je een cijfer krijgt voor je PO, wordt gekeken of je werk voldoet aan de minimale eisen. Werk dat niet voldoet aan de minimale eisen krijgt het cijfer 1,0. De minimale eisen zijn:\nDe inhoud van je webshop is moreel verantwoord: het is niet beledigend, visueel gewelddadig of op andere manieren onfatsoenlijk. Natuurlijk mag je overleggen met klasgenoten en mag je op internet kijken hoe je bepaalde dingen kunt maken. Let wel op dat je geen plagiaat pleegt. Je mag maximaal 5 regels code overnemen van andere leerlingen of internet en je schrijft in het commentaar erbij waar je het voorbeeld vandaan hebt. Dat geldt ook voor code die je zelf vertaalt naar het Nederlands. Overtypen van code uit een Youtube-video of een tutorial van internet volgen en dat resultaat inleveren is niet toegestaan. Je gebruikt de startcode die je krijgt. Je gebruikt het stappenplan dat in README.md van het template staat. Een download in zip-formaat van je opdracht mag maximaal 50 MB groot zijn. Werking en aantrekkelijkheid\nSpel start op Het spel werkt (hoe klein ook) Behaalde punten zijn zichtbaar bij game-over Het doel en de bediening van het spel is duidelijk Aantrekkelijk uiterlijk Prettige bediening Eenvoudig om mee te beginnen en moeilijker als je verder komt Afwisselend Techniek\nDe code volgt de lijn van het template De code is netjes en duidelijk leesbaar De code bevat geen dubbele stukken code Je hebt de technieken gebruikt die in de programmeerlessen zijn aangeboden. Je hebt dingen toegevoegd waarvan je zelf hebt uitgezocht hoe ze werken Inzet, planning en samenwerking\nJe toont inzet tijdens de lessen De planning is vooraf gemaakt, gevolgd en als nodig bijgesteld. De taakverdeling is duidelijk en alle teamleden dragen in gelijke mate bij. Het werk is verdeeld over de weken waarin aan de opdracht kon worden gewerkt. Inleveren De deadline voor inleveren vind je in de lesplanner. Je kunt vragen stellen tot de laatste les voor de deadline. Je zorgt dat alle bestanden in die nodig zijn om je spel te spelen in GitHub staan, dit zijn ten minste: index.html, style.css en script.js. Als je plaatjes gebruikt, dan staan die er ook bij. Je zorgt dat het README.md bestand met je planning aanwezig is. Je hebt aangegeven welke onderdelen gereed zijn. Uit de versie historie in GitHub blijkt hoe je je planning tussentijds hebt gevolgd en bijgesteld. De laatste versie van je PO die op het moment van de deadline in GitHub staat, wordt gebruikt voor de beoordeling. Startcode Uitlegvideo’s - algemene gitpod en rpelit link - stappenplan en uitleg van de repo en gebruikte technieken zet je in de readme - rijkere uitleg zoals video's of code voorbeelden zetten we op de website - zet in de description van de repo een link naar informatica.emmauscollege.nl - hoe verspreiden we de link naar het google-docs document waarin leerlingen zich opgeven voor de groepjes en hun github account opgeven? =\u003e op de pagina van de opdracht en dan bovenaan bij de opdracht een kopje \"inschrijven voor deze opdracht\" toevoegen. ","description":"","tags":null,"title":"3.5 Marble Mania Knikkerbaan","uri":"/opdrachten/knikkerbaan/"},{"content":"Chapter 5 Tests Some pages for internal testing of differnt styles\nCode Some testing for different styles used in syntax highlightning and preformatted blocks\nImages Some testing for different styles of image links\nLinks Some testing for different styles of links\n","description":"","tags":null,"title":"Tests","uri":"/tests/"},{"content":"Je leert hoe je met behulp van toestandsgrammen kunt programmeren. Je gebruikt daarbij het Arduino platform.\nTheorie Arduino-lessen.nl, les 1 t/m 5 Uitlegvideo’s Uitlegvideo’s bij deze theorie moeten we nog opzoeken\nLeerdoelen Je kunt Alleen vwo: Je kunt ","description":"","tags":null,"title":"2.6. Robotica met Arduino","uri":"/theorie/robotica/"},{"content":"Je leert hoe het internet van binnen werkt.\nTheorie Informatica Actief, keuzemodule netwerken Uitlegvideo’s Uitlegvideo’s bij deze theorie moeten we nog opzoeken\nLeerdoelen Je kunt Alleen vwo: Je kunt ","description":"","tags":null,"title":"2.7. Netwerken met IP","uri":"/theorie/netwerken/"},{"content":"Je leert object georienteerd programmeren. Dat is een manier van programmeren waarbij data en logica gebundeld zijn in objecten. Je gebruikt daarvoor de programmeertaal C++ (spreek uit als “See-plus-plus”).\nTheorie Arduino-lessen.nl, les 1 t/m 5 Uitlegvideo’s Uitlegvideo’s bij deze theorie moeten we nog opzoeken\nLeerdoelen Je kunt Alleen vwo: Je kunt ","description":"","tags":null,"title":"2.9. Object Oriented Programmeren","uri":"/theorie/objectoriented/"},{"content":"Je leert hoe hackers werken en hoe je kunt zorgen dat jij niet gehackt wordt.\nTheorie Arduino-lessen.nl, les 1 t/m 5 Uitlegvideo’s Uitlegvideo’s bij deze theorie moeten we nog opzoeken\nLeerdoelen Je kunt Alleen vwo: Je kunt ","description":"","tags":null,"title":"2.9. Security","uri":"/theorie/security/"},{"content":"","description":"","tags":null,"title":"1","uri":"/yours/1/"},{"content":"Hier vind je de lesplanner, geplande toetsen en inlevermomenten, vakoverzicht en PTA’s per jaarlaag.\nLesplanners 4H 5H 4V 5V 6V Datum (maandag) Les 1 (theorie) Les 2+3 (praktijk) 22-aug intro 29-aug Uitleg html tags (+khan) “Start khan intro to HTML and CSS khan t/m x.x” 05-sep Uitleg css selectors en properties (+khan) khan t/m x.x 12-sep Uitleg webdesign: boxmodel (+khan) khan t/m x.x 19-sep Uitleg webdesign: floats (+khan) khan t/m x.x 26-sep Uitleg ntb over design, of toch maar url’s / backend structuur / client server concept “Start PO websiteO website: eerste wijziging gemaakt” 03-okt Uitleg ntb over design, wireframes? PO website: 4 lege pagina’s + menu af 10-okt Uitleg ntb over security? (cookies enzo) PO website: 17-okt Uitleg intellectueel eigendom PO website 24-okt Herfstvakantie 31-okt “Start informatie uitleg informatie bits+BIN tellen (+ IA)” PO website 07-nov uitleg informatie DEC-\u003eBIN + BIN-\u003eDEC(+ IA) PO website 14-nov TW1 Toets 4H-IN-S01 over 2.1 Web Design 21-nov TW1 28-nov uitleg informatie DEC-\u003eHEX + HEX-\u003eDEC(+ IA) PO website 05-dec uitleg informatie RGB + plaatjes (+ IA) PO website 12-dec uitleg informatie geluid + video (+ IA) PO website 19-dec uitleg informatie compressie + bestanden en mappen(+ IA) PO website 26-dec Kerstvakantie 02-jan Kerstvakantie 09-jan korte uitleg photopea+ oefenen beeldbewerking PO website 16-jan korte uitleg lagen + oefenen beeldbewerking PO 4H-IN-S04 website inleveren 23-jan Uitleg machinetaal, hogere programmeertaal, compiler … Khan Javascript t/m drawing basics + coloring + variables + animation basics 30-jan Uitleg khan+p5js+draw/setup Khan Javascript t/m bonus with variables + tekst + functions 06-feb Uitleg variabele Khan Javascript t/m logic + loopings 13-feb Uitleg functie Khan Javascript t/m arrays 20-feb Uitleg logic en if PO game: eerst wijziging gemaakt 27-feb Voorjaarsvakantie 06-mrt Uitleg loop PO game: speler beweegt 13-mrt TW2: Toets 4H-IN-S01 over 2.2 Informatie 20-mrt TW2 27-mrt Uitleg array PO game: vijand 03-apr Uitleg nesten (loops, functies, …) PO game: botsingdetectie + afgaan 10-apr uitleg flowcharts PO game: punten + gameoverscherm 17-apr uitleg + oefeningen eenvoudige algoritmen PO game: uitlegscherm (= basis af) 24-apr **Meivakantie ** 01-mei **Meivakantie ** 08-mei oefeningen eenvoudige algoritmen PO game: werk aan uitbreiding 1 15-mei oefeningen eenvoudige algoritmen PO game: werk aan uitbreiding 1 22-mei oefeningen eenvoudige algoritmen PO game: uitbreiding 1 af 29-mei ntb: bubble sort? (geen leerdoel) PO game: werk aan uitbreiding 2 05-jun ntb PO game: werk aan uitbreiding 2 12-jun ntb uitbreiding 2 af / PO 4H-IN-S05 game inleveren 19-jun TW3: Toets 4H-IN-S03 over 2.3 Programmeren + 2.4 Algoritmen 26-jun TW3 10-jul Zomervakantie Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Toetsen en inlevermomenten 4H 5H 4V 5V 6V Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Datum Code Toestvorm. Stof Toetsweek 1 4H-IN-S01 Digitale toets 1.1 Web Design Toetsweek 2 4H-IN-S02 Digitale toets 1.2 Digitale Informatie zondag 23:59 week P2.x 4H-IN-S04 Praktische Opdracht 2.1 Website zondag 23:59 week P2.x 4H-IN-S05 Praktische Opdracht 2.2 Game Toetsweek 3 4H-IN-S03 Digitale Toets 1.3 Programmeren + 1.4 Algoritmen Advies voor inleveren van Praktische Opdrachten:\nLever een bijna af concept in vóór de laatste les voor de deadline, als er dan iets misgaat dan kun je nog een vraag stellen in de laatste les!\nVakoverzicht PTA De leerlingen raden we aan om vooral te kijken naar het vakoverzicht en de toets- en inlevermomenten hierboven op deze web-pagina. Voor wie het echt wil weten, is hier een linkje naar ons PTA in Excel, zoals we dat jaarlijks aanleveren aan de school.\n","description":"","tags":null,"title":"1. Planning","uri":"/planning/"},{"content":"","description":"","tags":null,"title":"10","uri":"/yours/10/"},{"content":"","description":"","tags":null,"title":"2","uri":"/yours/2/"},{"content":"Hier vind je alle theorie per onderwerp.\nmodules 2.1. Web Design met HTML en CSS Je leert hoe je informatie op een website zet met de programmeertalen HTML en CSS.\n2.1.1. Intellectueel eigendom Inleiding Tijdens het maken van je website zul je ongetwijfeld gemerkt hebben hoe gemakkelijk het is om informatie van andere webpagina’s over te nemen in die van jezelf. Het was vooraf bekend dat je voor de opdracht geen tekst mocht kopiëren zonder te citeren, maar wellicht heb je wel gebruik gemaakt van afbeeldingen, muziek, of HTML / javascript code. Maar mag dit eigenlijk wel? Dat hangt er vanaf. Hieronder zullen we een aantal aspecten van intellectueel eigendom behandelen die je zullen helpen met het beantwoorden van de vraag of je de informatie op je website rechtmatig hebt gebruikt.\n2.2. Digitale informatie Je leert hoe een computer allerlei soorten informatie opslaat.\n2.3. Programmeren met Javascript Je leert hoe je eenvoudige programma’s kunt maken met de programmeertaal Javascript en de p5js library.\n2.4. Algoritmen in Javascript Je leert hoe je problemen kunt oplossen met algoritmen, je gebruikt daarbij stroomdiagrammen en de programmeertaal Javascript.\n2.5. Databases met SQL Je leert hoe je heel veel informatie kunt bekijken en bewaren in databases met de programmeertaal SQL.\n2.6. Robotica met Arduino Je leert hoe je met behulp van toestandsgrammen kunt programmeren. Je gebruikt daarbij het Arduino platform.\n2.7. Netwerken met IP Je leert hoe het internet van binnen werkt.\n2.9. Object Oriented Programmeren Je leert object georienteerd programmeren. Dat is een manier van programmeren waarbij data en logica gebundeld zijn in objecten. Je gebruikt daarvoor de programmeertaal C++ (spreek uit als “See-plus-plus”).\n2.9. Security Je leert hoe hackers werken en hoe je kunt zorgen dat jij niet gehackt wordt.\n","description":"","tags":null,"title":"2. Theorie","uri":"/theorie/"},{"content":"","description":"","tags":null,"title":"3","uri":"/yours/3/"},{"content":"Hier vind je de praktische opdrachten. Praktische opdrachten zijn meestal tussen de vier en acht weken werk. Je hebt veel vrijheid en kunt er echt iets moois van maken.\nVoorbeelden Dit zijn voorbeelden van werkstukken die andere leerlingen hebben gemaakt.\n3.1 Website Je gaat je eigen website maken!\n3.2 Game Je gaat je eigen game programmeren!\n3.3 Webshop Je gaat je eigen webshop maken!\n3.4 Robot Je gaat je eigen website maken!\n3.5 Marble Mania Knikkerbaan Je gaat je eigen website maken!\n","description":"","tags":null,"title":"3. Opdrachten","uri":"/opdrachten/"},{"content":"","description":"","tags":null,"title":"4","uri":"/yours/4/"},{"content":"Tools zijn programma’s die we gebruiken om dingen te maken. Tools zijn dus het gereedschap dat je gebruikt bij informatica.\nDe tools die we bij informatica gebruiken:\nArduino IDE Wat is de Arduino IDE? De Arduino IDE is een programma waarmee je je Arduino kunt programmeren. De Arduino IDE is beschikbaar voor computers met Windows, Linux en MacOS. Het programma is niet beschikbaar voor iPads en Chromebooks. Functies van de Arduino IDE: code-editor compileren gecompileerde code uploaden naar een Arduino microcontroller (via een USB-kabel) Installeren van het programma De Arduino IDE is gratis. Je hoeft geen account aan te maken.\nFilius Wat is Filius? Filius is een programma waarmee je netwerken kunt bouwen en simuleren. Installeren van het programma Filius is gratis en je hoeft geen account aan te maken. Je kunt Filius op twee manieren starten. Start Filius in je browser en volg de stappen uit de Readme.md. Dit werkt op (bijna) elk apparaat met een moderne webbrowser. Je hebt een (gratis) account in GitPod nodig. Je browser opent GitPod en op de servers van GitPod wordt een Linux-omgeving met Filius geopend.\nGitHub TL;DR Git en GitHub zijn superhandig bij het programmeren, zowel alleen als in een team. Ga naar het stappenplan hieronder om te zien hoe je dit bij het programmeren gebruikt. Wat is GitHub? GitHub is een website waarop je gemakkelijk je programmeercode kunt opslaan. Je moet het zien als een soort cloudopslag voor je code. Heb je eenmaal een account in GitHub aangemaakt, dan kun je repositories maken. Een repository bevat de code voor één project of opdracht.\n","description":"","tags":null,"title":"4. Tools","uri":"/tools/"},{"content":"","description":"","tags":null,"title":"5","uri":"/yours/5/"},{"content":"Hier vind je informatie voor docenten. Geen geheimen natuurlijk, want leerlingen kunnen deze pagina ook bekijken.\nOnze filosofie We zijn in juni 2022 begonnen met deze site, vanuit de behoefte om alle verschillende stukken lesmateriaal die we de afgelopen jaren verzameld hebben overzichtelijk en laagdrempelig voor leerlingen bij elkaar te brengen. Bij het maken van de site hebben we ons laten leiden door de volgende uitgangspunten:\ninformatica als praktisch vak (leuk voor leerlingen, relevantie van theorie door koppeling met praktijk) laagdrempelig voor leerlingen (zo min mogelijk drempels: weinig kliks, ook op mobiel, geen inlog, snel vinden wat je zoekt, eenvoudige structuur) modulair programma (eenvoudig te onderhouden, onderdelen eenvoudig te vernieuwen) we maken geen lesmethode, maar een programma. Dat betekent dat we zoveel mogelijk verwijzen naar bestaand (Nederlandstalig of Engelstalig) lesmateriaal. Gebruiken in je klas Geef de link aan je leerlingen en gebruik de delen die je aanstaan. Zolang je doel is om leerlingen te helpen met informatica, vinden wij het geweldig.\nZelf aanpassen Wil je aanpassingen doen? Dat doe je zo:\nFork onze repo op github Maak de juiste instellingen (vraag CAM@emmaus) Pas de site naar je eigen behoeften aan Probeer schoolspecifieke informatie zoveel mogelijk te scheiden van de rest, dat is handig als je updates van ons wilt overnemen Meer informatie over de gebruike technieken\nHugo Documentation Theme Relearn Documentation Bijdragen We vinden het tof als je het programma gebruikt en nog toffer als je mee wilt werken om het verder te verbeteren. Als we kennis delen dan wordt het voor iedereen beter en kost het ons met zijn allen minder tijd om een mooi programma te onderhouden. Bijdragen kan als volgt:\nVoor kleine wijzigingen (binnen 1 pagina) kun je klikken op het potlood rechtsboven elke pagina. De aanpassing kun je vervolgens in github maken. Na goedkeuring worden ze automatisch verwerkt. (@we moeten dit nog testen) Voor substantielere wijzigingen, zoals toevoegen van een nieuwe (keuze)module. Contact ons via mail. We staan altijd open voor het uitwisselen van ervaring, contact ons Contact Arie Pieter Cammeraat CAM@emmaus\nSander van Geest GEE@emmaus Beide docent informatica op het Emmauscollege Rotterdam (volledige mailadres niet opgenomen ter bescherming tegen spam, tip: het mailadres eindigt op emmauscollege.nl 😉)\nLicense This site is licensed under the MIT License.\nCredits Wil jij je naam hier? Help ons dan om de site beter te maken.\n","description":"","tags":null,"title":"5. Docentenpagina","uri":"/docenten/"},{"content":"","description":"","tags":null,"title":"6","uri":"/yours/6/"},{"content":"","description":"","tags":null,"title":"7","uri":"/yours/7/"},{"content":"","description":"","tags":null,"title":"8","uri":"/yours/8/"},{"content":"","description":"","tags":null,"title":"9","uri":"/yours/9/"},{"content":"Wat is de Arduino IDE? De Arduino IDE is een programma waarmee je je Arduino kunt programmeren. De Arduino IDE is beschikbaar voor computers met Windows, Linux en MacOS. Het programma is niet beschikbaar voor iPads en Chromebooks. Functies van de Arduino IDE:\ncode-editor compileren gecompileerde code uploaden naar een Arduino microcontroller (via een USB-kabel) Installeren van het programma De Arduino IDE is gratis. Je hoeft geen account aan te maken. Download de Arduino IDE van https://www.arduino.cc/en/software Installeer het programma zoals je gewend bent om andere programma’s te installeren op je computer. Je eerste Arduino schets Start de Arduino IDE Sluit de Arduino met een USB-kabel aan op de laptop Stel de juiste Arduino in. Klik in het menu op “Hulpmiddelen”-\u003e“Board”-\u003ede_Arduino_die_je_hebt. De rode Arduino’s op school zijn “Aduino Nano”. Stel de USB-poort in waarop je de Arduino hebt aangesloten. Klik in het menu op “Hulpmiddelen”-\u003e“Poort”-\u003ekies_de_juiste_poort. Meestal is de juiste poort iets met “arduino” of “mega” en iets zonder “bluetooth”. Maak een schets. Een programma voor je Arduino microcontroller wordt vaak een schets (Engels: sketch) genoemd. Je kunt beginnen met een voorbeeld-schets. Klik in het menu op “Bestand”-\u003e“Voorbeelden”-\u003e“Basics”-\u003e“Blink” Compileer de schets (vertaal je code naar machinetaal die de Arduino gebruikt). Klik in het menu op “Schets”-\u003e“Verifeer/Compileer”. Upload (verstuur naar je Arduino via de USB-kabel). Klik in het menu op “Schets”-\u003e“Upload”. Je ziet nu een klein ledje op je Arduino die knippert. Verander de code, bijvoorbeeld delay(1000) aanpassen in delay(200). Herhaal stap 7. Je zult zien dat de Arduino stap 6 (compileren) vanzelf opnieuw doet, omdat je de code hebt aangepast. Het ledje knippert nu sneller. Nu je stap 9 gedaan hebt, weet je zeker dat het jouw programma is dat in de Arduino zit. De Arduino onthoudt namelijk het laatste programma, ook als de stroom eraf is geweest, dus het kan zijn dat het knipperend-led programma er al door een vorige leerling in is gezet. Extra libraries installeren De ingewikkeldere sensoren en actuatoren die je kunt aansluiten op je Arduino, zoals displays, hebben libraries nodig om ze te kunnen programmeren. Het installeren van libraries in de Arduino kan via het menu “Hulpmiddelen” -\u003e “Bibliotheken beheren”. Het vinden van de juiste bibliotheek kan wel eens lastig zijn, vraag het de docent als je twijfelt. Goede biblitheken bevatten voorbeeld-code die na installatie van de bibliotheek in de Arduino IDE terug te vinden is in het menu onder “Bestand” -\u003e “Voorbeelden” Meer informatie Meer informatie over de Arduino-taal vind je op https://www.arduino.cc/ klik op “documentation” -\u003e “reference” Meer informatie over de pinnen van je Arduino vind je op https://www.arduino.cc/ klik op “hardware” -\u003e kies jouw Arduino -\u003e kies het tabblad “FAQ” How-to Schets opslaan Kies in het menu “Bestand” -\u003e “Opslaan als”, kies een map en geef je schets een naam. Een schets wordt altijd opgeslagen in een map met dezelfde naam als de schets. Q\u0026A Bij het uploaden krijg ik de melding “avrdude: ser_open(): can’t open device”… Je hebt waarschijnlijk vergeten de juiste USB-poort te kiezen. Kies de juiste USB-poort in het menu onder “Hulpmiddelen”-\u003e“Poort”\nIk krijg één of meerdere foutmelding(en) tijdens het compileren Je hebt fout gemaakt in de code. Bekijk de bovenste foutmelding. Kijk of je de melding begrijpt. Er staat bij op welke regel de fout gevonden is. Probeer de fout in je code op te lossen. Compileer de code daarna opnieuw.\nIk krijg een foutmelding met “undefined” Je hebt waarschijnlijk een variabele gebruikt zonder deze te declareren of een typefout gemaakt in de naam van de variabele.\n","description":"","tags":null,"title":"Arduino IDE","uri":"/tools/arduino-ide/"},{"content":"","description":"","tags":null,"title":"Categories","uri":"/categories/"},{"content":"Some testing for different styles used in syntax highlightning and preformatted blocks.\nInline Code This is some very long inline code. Where does it wrap?\nWhat about wrapping short inline code if multiple sections are written side by side?\nWhat about wrapping short inline code if multiple sections are written side/by/side?\nWhat about wrapping long inline code if multiple sections are written side567 by34567 side567?\nWhat about wrapping long inline code if multiple sections are written side567/by34567/side567?\nCan we just use a simple HTML element ?\nBlock Code Code fences without any selected language { \"well\": \"some JSON in codefences in here\" } { \"well\": \"some JSON in HTML elements here\" } Block Preformatted Some preformatted stuff with markdown indention Some preformatted stuff in HTML elements ","description":"Some testing for different styles used in syntax highlightning and preformatted blocks","tags":null,"title":"Code","uri":"/tests/code/"},{"content":"Contributors Special thanks to everyone who has contributed to this project.\nMany thanks to Mathieu Cornic for his work on porting the Learn theme to Hugo.\nMany thanks to Andy Miller for initially creating the Learn theme for Grav.\nPackages and libraries autoComplete - A lightweight and powerful vanilla JavaScript completion suggester clipboard.js - A modern approach to copy text to clipboard Featherlight - A lightweight jQuery lightbox plugin Font Awesome - The internet’s icon library and toolkit jQuery - The “Write less, do more” JavaScript library jquery-svg-zoom-pan - A jQuery plugin to enable pan and zoom in SVG images Lunr - Enables a great search experience without the need for external, server-side, search services Mermaid - Generation of diagram and flowchart from text in a similar manner as markdown Perfect Scrollbar - A minimalistic but perfect custom scrollbar plugin RapiDoc - Create beautiful, customizable, interactive API documentation from OpenAPI Specifications Tooling GitHub - Continuous deployement, testing and hosting of this project’s sources and its documentation gren - A releasenotes generator for GitHub Hugo - The static site generator of your choice ","description":"","tags":null,"title":"Credits","uri":"/more/credits/"},{"content":"Wat is Filius? Filius is een programma waarmee je netwerken kunt bouwen en simuleren.\nInstalleren van het programma Filius is gratis en je hoeft geen account aan te maken. Je kunt Filius op twee manieren starten.\nStart Filius in je browser en volg de stappen uit de Readme.md. Dit werkt op (bijna) elk apparaat met een moderne webbrowser. Je hebt een (gratis) account in GitPod nodig. Je browser opent GitPod en op de servers van GitPod wordt een Linux-omgeving met Filius geopend. Installeer Filius op je eigen apparaat. Filius is beschikbaar voor Windows, MacOS en Linux. Meer informatie Meer informatie over Filius kun je vinden op de website van de maker: https://www.lernsoftware-filius.de De help over het gebruik van Filius zit in het programma: druk op het vraagteken. ","description":"","tags":null,"title":"Filius","uri":"/tools/filius/"},{"content":"TL;DR Git en GitHub zijn superhandig bij het programmeren, zowel alleen als in een team. Ga naar het stappenplan hieronder om te zien hoe je dit bij het programmeren gebruikt.\nWat is GitHub? GitHub is een website waarop je gemakkelijk je programmeercode kunt opslaan. Je moet het zien als een soort cloudopslag voor je code. Heb je eenmaal een account in GitHub aangemaakt, dan kun je repositories maken. Een repository bevat de code voor één project of opdracht. De kern van een repository zijn de bestanden. GitHub biedt echter nog veel meer functies aan, zoals planborden (projects) en lijsten waarop je taken (issues) kunt bijhouden.\nGit GitHub is genoemd naar git. Git is zgn. versiecontrolesysteem, ontwikkeld door Linus Torvalds, de maker van het besturingssysteem Linux. Git is een prachtig hulpmiddel waarmee je:\ngemakkelijk terugkunt naar eerdere versies van je code. gemakkelijk tegelijk met anderen aan dezelfde code kunt werken zonder dat alles door de war gaat Tijdlijn Je kunt je git het gemakkelijkst voorstellen als een tijdlijn. De punten op de tijdlijn zijn alle versies die jij vanaf het begin hebt ‘opgeslagen’:\nHoe werkt dit? Tijdens het programmeren werk je vaak zo:\nMaak / verander je programmeercode. Sla je veranderingen op. Test uit of het werkt. Het maakt eigenlijk niet uit of je hierbij gebruik maakt van GitPod, Repl.it, Arduino of een andere programmeeromgeving.\nMet het gebruik van git komt daar nog een stap bij: de commit. Een commit doen betekent dat je een nieuw punt aan je tijdlijn toevoegt. Dit doe je als volgt:\nZet de bestanden klaar voor de commit Typ een korte maar begrijpelijke commitboodschap Commit Lokaal en cloud (=\u003eGitHub) Git heeft GitHub niet nodig om goed te kunnen werken. Toch heeft het veel voordelen om gebruik te maken van git in combinatie met GitHub, helemaal als je met anderen wilt samenwerken aan dezelfde code. GitHub functioneert dan als de centrale cloudopslag waar iedereen mee synchroniseert. Het is belangrijk om te beseffen dat je code in je programmeeromgeving en GitHub wel aan elkaar verbonden, maar niet automatisch gesynchroniseerd zijn. Je zult dit handmatig moeten doen. Maak je gebruik van GitHub, dan voer je na je commit een synchronisatie uit:\nDuw je commit van je ’lokale’ repository naar je repository op GitHub. Wanneer je samenwerkt met anderen, wil je als je later verdergaat eerst eventuele aanpassingen van je teamgenoten binnenhalen. Als zij die netjes hebben geduwd naar de repository op GitHub, kun jij die eenvoudig binnenhalen. Bij samenwerken in een team wordt stap 1 dus:\nHaal eventuele nieuwe commits van je GitHub repository binnen. 8 Stappen: Pull : Haal alle updates van GitHub binnen in je lokale repository. Codeer : Maak / verander je programmeercode. Save (all) : Sla je veranderingen op. Probeer : Test uit of het werkt. Stage : Zet de bestanden klaar voor de commit. Message : Typ een korte maar begrijpelijke commitboodschap. Commit : Maak een nieuw punt in je tijdlijn. Push : Duw je commit van je ’lokale’ repository naar je (cloud) repository op GitHub. Q\u0026A GitHub 404 fout Ik heb via email een link ontvangen om toegang te krijgen tot een repo, maar als ik op de link druk dan krijg ik een 404 fout. Wat moet ik doen?\nLogin op GitHub en druk daarna nogmaals op de link.\n","description":"","tags":null,"title":"GitHub","uri":"/tools/github/"},{"content":"Some testing for different styles of image links.\nMarkdown Relative to page Relative to page up level Static External fully qualified External without scheme External without scheme and scheme separator HTML Relative to page Relative to page up level Static External fully qualified External without scheme External without scheme and scheme separator ","description":"Some testing for different styles of image links","tags":null,"title":"Images","uri":"/tests/images/"},{"content":"Informatica Actueel PWS project informatica: Actuele CO2 waarden op het Emmauscollege\nInhoud 1. Planning Hier vind je de lesplanner, geplande toetsen en inlevermomenten, vakoverzicht en PTA’s per jaarlaag.\n2. Theorie Hier vind je alle theorie per onderwerp.\n3. Opdrachten Hier vind je de praktische opdrachten. Praktische opdrachten zijn meestal tussen de vier en acht weken werk. Je hebt veel vrijheid en kunt er echt iets moois van maken.\n4. Tools Tools zijn programma’s die we gebruiken om dingen te maken. Tools zijn dus het gereedschap dat je gebruikt bij informatica.\nbezoeken sinds 13 juni 2022\n","description":"","tags":null,"title":"Informatica","uri":"/"},{"content":"Some testing for different styles of links.\nMarkdown Relative to page: Relative to page up level: Static: ","description":"Some testing for different styles of links","tags":null,"title":"Links","uri":"/tests/links/"},{"content":"","description":"","tags":null,"title":"Tags","uri":"/tags/"},{"content":"Placeholder…\n","description":"","tags":null,"title":"The one and only hidden child","uri":"/yours/children-1/"}]